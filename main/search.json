[{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommedations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependenct package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/articles/combining-data-extract-with-data-merge.html","id":"step-15---preparing-the-data","dir":"Articles","previous_headings":"","what":"Step 1/5 - Preparing the Data","title":"Combining Data Extract with Data Merge","text":"","code":"library(teal.transform) library(teal.data) #> Loading required package: teal.code library(shiny)  # Define data.frame objects ADSL <- teal.data::rADSL ADTTE <- teal.data::rADTTE  # create a list of reactive data.frame objects datasets <- list(   ADSL = reactive(ADSL),   ADTTE = reactive(ADTTE) )  # create join_keys join_keys <- join_keys(   join_key(\"ADSL\", \"ADSL\", c(\"STUDYID\", \"USUBJID\")),   join_key(\"ADSL\", \"ADTTE\", c(\"STUDYID\", \"USUBJID\")),   join_key(\"ADTTE\", \"ADTTE\", c(\"STUDYID\", \"USUBJID\", \"PARAMCD\")) )"},{"path":"https://insightsengineering.github.io/teal.transform/articles/combining-data-extract-with-data-merge.html","id":"step-25---creating-data-extract-specifications","dir":"Articles","previous_headings":"","what":"Step 2/5 - Creating data extract specifications","title":"Combining Data Extract with Data Merge","text":"following code block, create data_extract_spec object dataset, illustrated . created data_extract_spec() function takes four arguments: dataname name dataset extracted. select helps specify columns wish allow app user select. can generated using function select_spec(). case ADSL, restrict selection AGE, SEX, BMRKR1, AGE default selection. filter helps specify values variable wish filter extraction. can generated using function filter_spec(). case ADTTE, filter variable PARAMCD allowing users choose CRSD, EFS, OS, PFS, OS default filter. reshape boolean helps specify data needs reshaped long wide format. default set FALSE.","code":"adsl_extract <- data_extract_spec(   dataname = \"ADSL\",   select = select_spec(     label = \"Select variable:\",     choices = c(\"AGE\", \"SEX\", \"BMRKR1\"),     selected = \"AGE\",     multiple = TRUE,     fixed = FALSE   ) )  adtte_extract <- data_extract_spec(   dataname = \"ADTTE\",   select = select_spec(     choices = c(\"AVAL\", \"AVALC\", \"ASEQ\"),     selected = \"AVAL\",     multiple = TRUE,     fixed = FALSE   ),   filter = filter_spec(     vars = \"PARAMCD\",     choices = c(\"CRSD\", \"EFS\", \"OS\", \"PFS\"),     selected = \"OS\"   ) )  data_extracts <- list(adsl_extract = adsl_extract, adtte_extract = adtte_extract)"},{"path":"https://insightsengineering.github.io/teal.transform/articles/combining-data-extract-with-data-merge.html","id":"step-35---creating-the-ui","dir":"Articles","previous_headings":"","what":"Step 3/5 - Creating the UI","title":"Combining Data Extract with Data Merge","text":", define merge_ui function, used create UI components shiny app. Note take list data_extract objects input, make use data_extract_ui function create UI.","code":"merge_ui <- function(id, data_extracts) {   ns <- NS(id)   sidebarLayout(     sidebarPanel(       h3(\"Encoding\"),       tags$div(         data_extract_ui(           ns(\"adsl_extract\"), # must correspond with data_extracts list names           label = \"ADSL extract\",           data_extracts[[1]]         ),         data_extract_ui(           ns(\"adtte_extract\"), # must correspond with data_extracts list names           label = \"ADTTE extract\",           data_extracts[[2]]         )       )     ),     mainPanel(       h3(\"Output\"),       verbatimTextOutput(ns(\"expr\")),       dataTableOutput(ns(\"data\"))     )   ) }"},{"path":"https://insightsengineering.github.io/teal.transform/articles/combining-data-extract-with-data-merge.html","id":"step-45---creating-the-server-logic","dir":"Articles","previous_headings":"","what":"Step 4/5 - Creating the Server Logic","title":"Combining Data Extract with Data Merge","text":", define merge_srv function, used create server logic shiny app. function takes arguments datasets (list reactive data.frame), data extract specifications created (data_extract list), join_keys object (read join_keys Join Keys vignette teal.data). make use merge_expression_srv function get reactive list containing merge expression information needed perform transformation - see merge_expression_srv documentation. print expression UI also evaluate get final ANL dataset also displayed table UI.","code":"merge_srv <- function(id, datasets, data_extracts, join_keys) {   moduleServer(id, function(input, output, session) {     selector_list <- data_extract_multiple_srv(data_extracts, datasets, join_keys)     merged_data <- merge_expression_srv(       selector_list = selector_list,       datasets = datasets,       join_keys = join_keys,       merge_function = \"dplyr::left_join\"     )     ANL <- reactive({       data_list <- lapply(datasets, function(ds) ds())       eval(envir = list2env(data_list), expr = as.expression(merged_data()$expr))     })      output$expr <- renderText(paste(merged_data()$expr, collapse = \"\\n\"))     output$data <- renderDataTable(ANL())   }) }"},{"path":"https://insightsengineering.github.io/teal.transform/articles/combining-data-extract-with-data-merge.html","id":"step-55---creating-the-shiny-app","dir":"Articles","previous_headings":"","what":"Step 5/5 - Creating the shiny App","title":"Combining Data Extract with Data Merge","text":"Finally, include merge_ui merge_srv UI server components shinyApp, respectively, using data_extracts defined first code block datasets object:","code":"shinyApp(   ui = fluidPage(merge_ui(\"data_merge\", data_extracts)),   server = function(input, output, session) {     merge_srv(\"data_merge\", datasets, data_extracts, join_keys)   } )"},{"path":"https://insightsengineering.github.io/teal.transform/articles/combining-data-extract-with-data-merge.html","id":"try-it-out-in-shinylive","dir":"Articles","previous_headings":"","what":"Try it out in Shinylive","title":"Combining Data Extract with Data Merge","text":"Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-extract.html","id":"data_extract_spec","dir":"Articles","previous_headings":"","what":"data_extract_spec","title":"Data Extract","text":"role data_extract_spec twofold: create UI component shiny application pass user input UI custom server logic can use input transform data. Let‚Äôs delve fulfills responsibilities.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-extract.html","id":"step-14---preparing-the-data","dir":"Articles","previous_headings":"data_extract_spec","what":"Step 1/4 - Preparing the Data","title":"Data Extract","text":"","code":"library(teal.transform) library(teal.data) #> Loading required package: teal.code library(shiny)  # Define data.frame objects ADSL <- teal.data::rADSL ADTTE <- teal.data::rADTTE  # create a list of reactive data.frame objects datasets <- list(   ADSL = reactive(ADSL),   ADTTE = reactive(ADTTE) ) # create join_keys join_keys <- join_keys(   join_key(\"ADSL\", \"ADSL\", c(\"STUDYID\", \"USUBJID\")),   join_key(\"ADSL\", \"ADTTE\", c(\"STUDYID\", \"USUBJID\")),   join_key(\"ADTTE\", \"ADTTE\", c(\"STUDYID\", \"USUBJID\", \"PARAMCD\")) )"},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-extract.html","id":"step-24---creating-a-data_extract_spec-object","dir":"Articles","previous_headings":"data_extract_spec","what":"Step 2/4 - Creating a data_extract_spec Object","title":"Data Extract","text":"Consider following example, create two UI elements, one filter specific level SEX variable, second one select variable c(\"BMRKR1\", \"AGE\"). data_extract_spec object handed shiny app gives instructions generate UI components.","code":"simple_des <- data_extract_spec(   dataname = \"ADSL\",   filter = filter_spec(vars = \"SEX\", choices = c(\"F\", \"M\")),   select = select_spec(choices = c(\"BMRKR1\", \"AGE\")) )"},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-extract.html","id":"step-34---creating-the-shiny-ui-and-server-modules","dir":"Articles","previous_headings":"data_extract_spec","what":"Step 3/4 - Creating the shiny UI and Server Modules","title":"Data Extract","text":"demonstrate different initialization options data_extract_spec, let‚Äôs first define shiny module utilizes data_extract_ui data_extract_srv handle data_extract_spec objects. module creates UI component single data_extract_spec prints list values returned data_extract_srv module. information data_extract_ui data_extract_srv, please refer package documentation.","code":"extract_ui <- function(id, data_extract) {   ns <- NS(id)   sidebarLayout(     sidebarPanel(       h3(\"Encoding\"),       data_extract_ui(ns(\"data_extract\"), label = \"variable\", data_extract)     ),     mainPanel(       h3(\"Output\"),       verbatimTextOutput(ns(\"output\"))     )   ) }  extract_srv <- function(id, datasets, data_extract, join_keys) {   moduleServer(id, function(input, output, session) {     reactive_extract_input <- data_extract_srv(\"data_extract\", datasets, data_extract, join_keys)     s <- reactive({       format_data_extract(reactive_extract_input())     })     output$output <- renderPrint({       cat(s())     })   }) }"},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-extract.html","id":"step-44---creating-the-shiny-app","dir":"Articles","previous_headings":"data_extract_spec","what":"Step 4/4 - Creating the shiny App","title":"Data Extract","text":"Finally, include extract_ui UI shinyApp, utilize extract_srv server function shinyApp:","code":"shinyApp(   ui = fluidPage(extract_ui(\"data_extract\", simple_des)),   server = function(input, output, session) {     extract_srv(\"data_extract\", datasets, simple_des, join_keys)   } )"},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-extract.html","id":"try-it-out-in-shinylive","dir":"Articles","previous_headings":"","what":"Try it out in Shinylive","title":"Data Extract","text":"Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-merge.html","id":"merge_expression_module","dir":"Articles","previous_headings":"","what":"merge_expression_module","title":"Data Merge","text":"Using merge_expression_module alone requires list data_extract_spec objects data_extract argument, list reactive non-reactive data.frame objects, list join keys corresponding data.frame object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-merge.html","id":"step-15---preparing-the-data","dir":"Articles","previous_headings":"merge_expression_module","what":"Step 1/5 - Preparing the Data","title":"Data Merge","text":"","code":"library(teal.transform) library(teal.data) #> Loading required package: teal.code library(shiny)  # Define data.frame objects ADSL <- teal.data::rADSL ADTTE <- teal.data::rADTTE  # create a list of reactive data.frame objects datasets <- list(   ADSL = reactive(ADSL),   ADTTE = reactive(ADTTE) )  # create  join_keys join_keys <- join_keys(   join_key(\"ADSL\", \"ADSL\", c(\"STUDYID\", \"USUBJID\")),   join_key(\"ADSL\", \"ADTTE\", c(\"STUDYID\", \"USUBJID\")),   join_key(\"ADTTE\", \"ADTTE\", c(\"STUDYID\", \"USUBJID\", \"PARAMCD\")) )"},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-merge.html","id":"step-25---creating-the-data-extracts","dir":"Articles","previous_headings":"merge_expression_module","what":"Step 2/5 - Creating the Data Extracts","title":"Data Merge","text":"","code":"adsl_extract <- data_extract_spec(   dataname = \"ADSL\",   select = select_spec(     label = \"Select variable:\",     choices = c(\"AGE\", \"BMRKR1\"),     selected = \"AGE\",     multiple = TRUE,     fixed = FALSE   ) )  adtte_extract <- data_extract_spec(   dataname = \"ADTTE\",   select = select_spec(     choices = c(\"AVAL\", \"ASEQ\"),     selected = \"AVAL\",     multiple = TRUE,     fixed = FALSE   ) )  data_extracts <- list(adsl_extract = adsl_extract, adtte_extract = adtte_extract)"},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-merge.html","id":"step-35---creating-the-ui","dir":"Articles","previous_headings":"merge_expression_module","what":"Step 3/5 - Creating the UI","title":"Data Merge","text":"","code":"merge_ui <- function(id, data_extracts) {   ns <- NS(id)   sidebarLayout(     sidebarPanel(       h3(\"Encoding\"),       tags$div(         data_extract_ui(           ns(\"adsl_extract\"), # must correspond with data_extracts list names           label = \"ADSL extract\",           data_extracts[[1]]         ),         data_extract_ui(           ns(\"adtte_extract\"), # must correspond with data_extracts list names           label = \"ADTTE extract\",           data_extracts[[2]]         )       )     ),     mainPanel(       h3(\"Output\"),       verbatimTextOutput(ns(\"expr\")),       dataTableOutput(ns(\"data\"))     )   ) }"},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-merge.html","id":"step-45---creating-the-server-logic","dir":"Articles","previous_headings":"merge_expression_module","what":"Step 4/5 - Creating the Server Logic","title":"Data Merge","text":"","code":"merge_srv <- function(id, datasets, data_extracts, join_keys) {   moduleServer(id, function(input, output, session) {     merged_data <- merge_expression_module(       data_extract = data_extracts,       datasets = datasets,       join_keys = join_keys,       merge_function = \"dplyr::left_join\"     )      ANL <- reactive({       data_list <- lapply(datasets, function(ds) ds())       eval(envir = list2env(data_list), expr = as.expression(merged_data()$expr))     })     output$expr <- renderText(paste(merged_data()$expr, collapse = \"\\n\"))     output$data <- renderDataTable(ANL())   }) }"},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-merge.html","id":"step-55---creating-the-shiny-app","dir":"Articles","previous_headings":"merge_expression_module","what":"Step 5/5 - Creating the shiny App","title":"Data Merge","text":"Open Shinylive","code":"shinyApp(   ui = fluidPage(merge_ui(\"data_merge\", data_extracts)),   server = function(input, output, session) {     merge_srv(\"data_merge\", datasets, data_extracts, join_keys)   } )"},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-merge.html","id":"data_extract_multiple_srv-merge_expression_srv","dir":"Articles","previous_headings":"","what":"data_extract_multiple_srv + merge_expression_srv","title":"Data Merge","text":"scenario , user deselects ADTTE variable, merging ADTTE ADSL still occur, even though ADTTE used needed. , developer might update selector_list input reactive manner gets updated based conditions set developer. , reuse input update app server adtte_extract removed selector_list input ADTTE variable selected. reactive_selector_list passed merge_expression_srv:","code":""},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-merge.html","id":"modifying-the-server-logic","dir":"Articles","previous_headings":"data_extract_multiple_srv + merge_expression_srv","what":"Modifying the Server Logic","title":"Data Merge","text":"","code":"merge_srv <- function(id, datasets, data_extracts, join_keys) {   moduleServer(id, function(input, output, session) {     selector_list <- data_extract_multiple_srv(data_extracts, datasets, join_keys)     reactive_selector_list <- reactive({       if (is.null(selector_list()$adtte_extract) || length(selector_list()$adtte_extract()$select) == 0) {         selector_list()[names(selector_list()) != \"adtte_extract\"]       } else {         selector_list()       }     })      merged_data <- merge_expression_srv(       selector_list = reactive_selector_list,       datasets = datasets,       join_keys = join_keys,       merge_function = \"dplyr::left_join\"     )      ANL <- reactive({       data_list <- lapply(datasets, function(ds) ds())       eval(envir = list2env(data_list), expr = as.expression(merged_data()$expr))     })     output$expr <- renderText(paste(merged_data()$expr, collapse = \"\\n\"))     output$data <- renderDataTable(ANL())   }) }"},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-merge.html","id":"updating-the-shiny-app","dir":"Articles","previous_headings":"data_extract_multiple_srv + merge_expression_srv","what":"Updating the shiny app","title":"Data Merge","text":"Open Shinylive merge_expression_module replaced three parts: selector_list: output data_extract_multiple_srv, loops list data_extract given runs data_extract_srv one, returning list reactive objects. reactive_selector_list: intermediate reactive list updating selector_list content. merged_data: output merge_expression_srv using reactive_selector_list input.","code":"shinyApp(   ui = fluidPage(merge_ui(\"data_merge\", data_extracts)),   server = function(input, output, session) {     merge_srv(\"data_merge\", datasets, data_extracts, join_keys)   } )"},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-merge.html","id":"output-from-merging","dir":"Articles","previous_headings":"","what":"Output from merging","title":"Data Merge","text":"merge functions, merge_expression_srv merge_expression_module, return reactive object contains list following elements: expr: code needed replicate merged dataset. columns_source: list columns selected per selector. keys: keys merged dataset. filter_info: filters applied data. elements can used inside server retrieve use information selections, data, filters, etc.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/articles/data-merge.html","id":"merging-of-non-cdisc-datasets","dir":"Articles","previous_headings":"","what":"Merging of non CDISC datasets","title":"Data Merge","text":"General datasets relationships CDISC datasets, relationships must specified using join_keys functions. information, please refer Join Keys vignette. data merge module respects relationships given user. case multiple datasets merge, order specified order elements data_extract argument merge_expression_module function. Merging groups datasets complex relationships can quickly become challenging specify please take extra care setting .","code":""},{"path":"https://insightsengineering.github.io/teal.transform/articles/teal-transform.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with teal.transform","text":"teal.transform package integral component teal framework. serves dual purpose: teal application developers, provides means specify dataset columns can accessed user interface, streamlining column selection within applications. teal module developers, offers standardized user interface column selection datasets facilitates dataset merging, resulting creation analysis datasets use within modules.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/articles/teal-transform.html","id":"data-extraction-and-data-merging","dir":"Articles","previous_headings":"","what":"Data Extraction and Data Merging","title":"Getting Started with teal.transform","text":"primary goal teal.transform provide functions help abstracting process Data Extraction Data Merging UI elements shiny app. helps reducing amount code required create UI elements directly transform data perform required analysis. app user gains flexibility transform data right UI. explore combined use data extraction merging see full use teal.transform, please explore Combining data-extract data-merge vignette. delve process selecting specific data columns, please consult Data Extraction vignette. comprehensive information regarding data merging, please refer Data Merge vignette.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dawid Kaledkowski. Author, maintainer. Pawel Rucki. Author. Mahmoud Hallal. Author. Nikolas Burkoff. Author. Maciej Nasinski. Author. Konrad Pagacz. Author. Junlue Zhao. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaledkowski D, Rucki P, Hallal M, Burkoff N, Nasinski M, Pagacz K, Zhao J (2025). teal.transform: Functions Extracting Merging Data 'teal' Framework. R package version 0.6.0, https://github.com/insightsengineering/teal.transform/, https://insightsengineering.github.io/teal.transform/.","code":"@Manual{,   title = {teal.transform: Functions for Extracting and Merging Data in the 'teal' Framework},   author = {Dawid Kaledkowski and Pawel Rucki and Mahmoud Hallal and Nikolas Burkoff and Maciej Nasinski and Konrad Pagacz and Junlue Zhao},   year = {2025},   note = {R package version 0.6.0,     https://github.com/insightsengineering/teal.transform/},   url = {https://insightsengineering.github.io/teal.transform/}, }"},{"path":"https://insightsengineering.github.io/teal.transform/index.html","id":"tealtransform","dir":"","previous_headings":"","what":"Functions for Extracting and Merging Data in the teal Framework","title":"Functions for Extracting and Merging Data in the teal Framework","text":"package contains functions shiny modules extracting merging data within teal framework.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions for Extracting and Merging Data in the teal Framework","text":"Alternatively, might want use development version.","code":"install.packages('teal.transform') # install.packages(\"pak\") pak::pak(\"insightsengineering/teal.transform\")"},{"path":"https://insightsengineering.github.io/teal.transform/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Functions for Extracting and Merging Data in the teal Framework","text":"understand use package, please refer Getting Started article, provides multiple examples code implementation. small example usage:","code":"library(teal.transform) ADSL <- teal.data::rADSL  adsl_extract <- data_extract_spec(   dataname = \"ADSL\",   filter = filter_spec(vars = \"SEX\", choices = c(\"F\", \"M\")),   select = select_spec(choices = c(\"BMRKR1\", \"AGE\")) )  ui <- data_extract_ui(   id = \"adsl_ui\",   label = \"ADSL UI\",   data_extract_spec = adsl_extract )  library(shiny) ui <- fluidPage(ui) server <- function(input, output, session) {} shinyApp(ui, server)"},{"path":"https://insightsengineering.github.io/teal.transform/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Functions for Extracting and Merging Data in the teal Framework","text":"encounter bug feature request, please file issue. questions, discussions, staying date, please use teal channel pharmaverse slack workspace.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"Abstract data type stores returns number elements.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"Queue object stores elements single vector, thus data types can stored, silent coercion may occur. Elements returned order added.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"Queue$push() Queue$get() Queue$pop() Queue$remove() Queue$empty() Queue$size() Queue$print() Queue$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"method-push-","dir":"Reference","previous_headings":"","what":"Method push()","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"Adds element(s) Queue.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"","code":"Queue$push(new_elements)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"new_elements vector elements add.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"self, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"Returns contents Queue object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"","code":"Queue$get()"},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"Single vector containing Queue contents.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"method-pop-","dir":"Reference","previous_headings":"","what":"Method pop()","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"Returns first (oldest) element Queue removes .","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"","code":"Queue$pop()"},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"vector length 1 containing first element Queue NULL Queue empty.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"method-remove-","dir":"Reference","previous_headings":"","what":"Method remove()","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"Removes oldest occurrence specified element(s) Queue. Relies implicit type conversions R identify elements remove.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"","code":"Queue$remove(elements)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"elements vector elements remove Queue.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"self, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"method-empty-","dir":"Reference","previous_headings":"","what":"Method empty()","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"Removes elements Queue.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"","code":"Queue$empty()"},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"self, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"method-size-","dir":"Reference","previous_headings":"","what":"Method size()","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"Returns number elements Queue.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"","code":"Queue$size()"},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"integer(1).","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"Prints Queue.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"","code":"Queue$print(...)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"... Additional arguments method, ignored.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"self, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"","code":"Queue$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/Queue.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class - A First-In-First-Out Abstract Data Type ‚Äî Queue","text":"deep Whether make deep clone.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/add_no_selected_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add empty choice to choices selected ‚Äî add_no_selected_choices","text":"","code":"add_no_selected_choices(x, multiple = FALSE)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/add_no_selected_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add empty choice to choices selected ‚Äî add_no_selected_choices","text":"x (choices_selected) object. multiple (logical(1)) whether multiple selections allowed .","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/add_no_selected_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add empty choice to choices selected ‚Äî add_no_selected_choices","text":"choices_selected object empty option added choices.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/are_needed_keys_provided.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether the provided slices have the corresponding join keys ‚Äî are_needed_keys_provided","title":"Checks whether the provided slices have the corresponding join keys ‚Äî are_needed_keys_provided","text":"Checks whether provided slices corresponding join keys","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/are_needed_keys_provided.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether the provided slices have the corresponding join keys ‚Äî are_needed_keys_provided","text":"","code":"are_needed_keys_provided(join_keys, merged_selector_list)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/are_needed_keys_provided.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks whether the provided slices have the corresponding join keys ‚Äî are_needed_keys_provided","text":"join_keys (join_keys) provided join keys. merged_selector_list (list) specification datasets' slices merge.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/are_needed_keys_provided.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether the provided slices have the corresponding join keys ‚Äî are_needed_keys_provided","text":"TRUE pairs slices corresponding keys FALSE otherwise.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/are_needed_keys_provided.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Checks whether the provided slices have the corresponding join keys ‚Äî are_needed_keys_provided","text":"merged_selector_list contains list descriptions data frame slices; coming single dataset. function checks whether pairs datasets join keys needed merge slices.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_check_parse_varname.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks varname argument and convert to call ‚Äî call_check_parse_varname","title":"Checks varname argument and convert to call ‚Äî call_check_parse_varname","text":"Checks varname type parse character.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_check_parse_varname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks varname argument and convert to call ‚Äî call_check_parse_varname","text":"","code":"call_check_parse_varname(varname)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_check_parse_varname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks varname argument and convert to call ‚Äî call_check_parse_varname","text":"varname (name call character(1)) name variable","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_check_parse_varname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks varname argument and convert to call ‚Äî call_check_parse_varname","text":"parsed varname.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Choices condition call ‚Äî call_condition_choice","title":"Choices condition call ‚Äî call_condition_choice","text":"Compose choices condition call inputs.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choices condition call ‚Äî call_condition_choice","text":"","code":"call_condition_choice(varname, choices)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_choice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choices condition call ‚Äî call_condition_choice","text":"varname (name call character(1)) name variable. choices (vector) varname values match using == (single value) %% (vector) condition.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_choice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choices condition call ‚Äî call_condition_choice","text":"call.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_choice.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Choices condition call ‚Äî call_condition_choice","text":"choices can vector type output might converted: factor call composed choices converted character; Date call composed choices converted character using format(choices); POSIXct, POSIXlt call composed choices converted character using format(choices). One careful formatted date-time variable might loose precision (see format argument format.POSIXlt() output call insufficient exact comparison. case one specify varname = trunc(<varname>) possibly convert choices character).","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"logical variable condition call ‚Äî call_condition_logical","title":"logical variable condition call ‚Äî call_condition_logical","text":"Compose logical variable condition call inputs.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"logical variable condition call ‚Äî call_condition_logical","text":"","code":"call_condition_logical(varname, choice)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"logical variable condition call ‚Äî call_condition_logical","text":"varname (name character(1)) name variable choice (logical(1)) chosen value","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"logical variable condition call ‚Äî call_condition_logical","text":"call.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_range.html","id":null,"dir":"Reference","previous_headings":"","what":"numeric range condition call ‚Äî call_condition_range","title":"numeric range condition call ‚Äî call_condition_range","text":"Compose numeric range condition call inputs.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"numeric range condition call ‚Äî call_condition_range","text":"","code":"call_condition_range(varname, range)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"numeric range condition call ‚Äî call_condition_range","text":"varname (name character(1)) name variable. range (numeric(2)) range variable.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"numeric range condition call ‚Äî call_condition_range","text":"call.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_range_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Date range condition call ‚Äî call_condition_range_date","title":"Date range condition call ‚Äî call_condition_range_date","text":"Compose Date range condition call inputs.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_range_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date range condition call ‚Äî call_condition_range_date","text":"","code":"call_condition_range_date(varname, range)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_range_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date range condition call ‚Äî call_condition_range_date","text":"varname (name character(1)) name variable. range (Date) range variable.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_range_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date range condition call ‚Äî call_condition_range_date","text":"call.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_range_posixct.html","id":null,"dir":"Reference","previous_headings":"","what":"POSIXct range condition call ‚Äî call_condition_range_posixct","title":"POSIXct range condition call ‚Äî call_condition_range_posixct","text":"Compose POSIXct range condition call inputs.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_range_posixct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"POSIXct range condition call ‚Äî call_condition_range_posixct","text":"","code":"call_condition_range_posixct(varname, range, timezone = Sys.timezone())"},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_range_posixct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"POSIXct range condition call ‚Äî call_condition_range_posixct","text":"varname (name character(1)) name variable. range (POSIXct) range variable. aware output uses truncated range format \"%Y-%m-%d %H:%M:%S\", means precision might lost. timezone (character(1)) specifies time zone used conversion. default Sys.timezone() used.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_condition_range_posixct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"POSIXct range condition call ‚Äî call_condition_range_posixct","text":"call.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_extract_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Get call to subset and select array ‚Äî call_extract_array","title":"Get call to subset and select array ‚Äî call_extract_array","text":"Get call subset select array","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_extract_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get call to subset and select array ‚Äî call_extract_array","text":"","code":"call_extract_array(dataname = \".\", row = NULL, column = NULL, aisle = NULL)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_extract_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get call to subset and select array ‚Äî call_extract_array","text":"dataname (character(1) name). row (name call logical integer character) optional name row condition. column (name call logical integer character) optional name column condition. aisle (name call logical integer character) optional name row condition.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_extract_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get call to subset and select array ‚Äî call_extract_array","text":"Extract() call 3-dimensional array x[, j, k] notation.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_extract_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Compose extract call with $ operator ‚Äî call_extract_list","title":"Compose extract call with $ operator ‚Äî call_extract_list","text":"Compose extract call $ operator","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_extract_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compose extract call with $ operator ‚Äî call_extract_list","text":"","code":"call_extract_list(dataname, varname, dollar = TRUE)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_extract_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compose extract call with $ operator ‚Äî call_extract_list","text":"dataname (character(1) name) name object. varname (character(1) name) name slot data. dollar (logical(1)) whether returned call use $ [[ operator.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_extract_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compose extract call with $ operator ‚Äî call_extract_list","text":"Extract() call $ [[ notation (depending parameters).","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_extract_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get call to subset and select matrix ‚Äî call_extract_matrix","title":"Get call to subset and select matrix ‚Äî call_extract_matrix","text":"Get call subset select matrix","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_extract_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get call to subset and select matrix ‚Äî call_extract_matrix","text":"","code":"call_extract_matrix(dataname = \".\", row = NULL, column = NULL)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_extract_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get call to subset and select matrix ‚Äî call_extract_matrix","text":"dataname (character(1) name). row (name call logical integer character) optional name row condition. column (name call logical integer character) optional name column condition.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_extract_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get call to subset and select matrix ‚Äî call_extract_matrix","text":"Extract() call matrix x[, j] notation.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_with_colon.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a call using a function in a given namespace ‚Äî call_with_colon","title":"Create a call using a function in a given namespace ‚Äî call_with_colon","text":"dot arguments ... need quoted evaluated otherwise.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_with_colon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a call using a function in a given namespace ‚Äî call_with_colon","text":"","code":"call_with_colon(name, ..., unlist_args = list())"},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_with_colon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a call using a function in a given namespace ‚Äî call_with_colon","text":"name character function name, possibly using namespace colon ::, also works ::: (sometimes needed, strongly discouraged). ... arguments pass function name name. unlist_args list extra arguments passed single list, avoids use .call function.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/call_with_colon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a call using a function in a given namespace ‚Äî call_with_colon","text":"call.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/calls_combine_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine calls by operator ‚Äî calls_combine_by","title":"Combine calls by operator ‚Äî calls_combine_by","text":"Combine list calls specific operator.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/calls_combine_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine calls by operator ‚Äî calls_combine_by","text":"","code":"calls_combine_by(operator, calls)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/calls_combine_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine calls by operator ‚Äî calls_combine_by","text":"operator (character(1) name) name / symbol operator. calls (list calls) list containing calls combined operator.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/calls_combine_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine calls by operator ‚Äî calls_combine_by","text":"combined call.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_data_extract_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Check data extract specification ‚Äî check_data_extract_spec","title":"Check data extract specification ‚Äî check_data_extract_spec","text":"Check data extract specification","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_data_extract_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check data extract specification ‚Äî check_data_extract_spec","text":"","code":"check_data_extract_spec(data_extract_spec)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_data_extract_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check data extract specification ‚Äî check_data_extract_spec","text":"data_extract_spec (list) data_extract_spec.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_data_extract_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check data extract specification ‚Äî check_data_extract_spec","text":"Raises error check fails, otherwise, returns data_extract_spec parameter, invisibly unchanged.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_data_extract_spec_react.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to check data_extract_specs ‚Äî check_data_extract_spec_react","title":"Function to check data_extract_specs ‚Äî check_data_extract_spec_react","text":"Checks dataname argument exists dataset. Checks selected filter columns exist within datasets. Throws shiny validation error requirements met.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_data_extract_spec_react.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to check data_extract_specs ‚Äî check_data_extract_spec_react","text":"","code":"check_data_extract_spec_react(datasets, data_extract)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_data_extract_spec_react.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to check data_extract_specs ‚Äî check_data_extract_spec_react","text":"datasets (FilteredData) object created using teal API. data_extract (list) output data_extract module.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_data_extract_spec_react.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to check data_extract_specs ‚Äî check_data_extract_spec_react","text":"NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_data_merge_selectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate data_extracts in merge_datasets ‚Äî check_data_merge_selectors","title":"Validate data_extracts in merge_datasets ‚Äî check_data_merge_selectors","text":"Validate selected inputs data_extract passing data_merge avoid dplyr errors unexpected results.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_data_merge_selectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate data_extracts in merge_datasets ‚Äî check_data_merge_selectors","text":"","code":"check_data_merge_selectors(selector_list)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_data_merge_selectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate data_extracts in merge_datasets ‚Äî check_data_merge_selectors","text":"selector_list (reactive) output data_extract_multiple_srv() reactive named list outputs data_extract_srv(). using reactive named list, names must identical shiny ids respective data_extract_ui().","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_data_merge_selectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate data_extracts in merge_datasets ‚Äî check_data_merge_selectors","text":"NULL check successful shiny validate error otherwise.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_merge_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the merge function is valid ‚Äî check_merge_function","title":"Check if the merge function is valid ‚Äî check_merge_function","text":"Check merge function valid","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_merge_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the merge function is valid ‚Äî check_merge_function","text":"","code":"check_merge_function(merge_function)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_merge_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the merge function is valid ‚Äî check_merge_function","text":"merge_function (character) merge function name.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_merge_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the merge function is valid ‚Äî check_merge_function","text":"Raises error check fails, otherwise, returns NULL, invisibly.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_no_multiple_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks that the extract_input specification does not allow multiple selection ‚Äî check_no_multiple_selection","text":"","code":"check_no_multiple_selection(extract_input)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_no_multiple_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks that the extract_input specification does not allow multiple selection ‚Äî check_no_multiple_selection","text":"extract_input (list NULL) list data_extract_spec","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_no_multiple_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks that the extract_input specification does not allow multiple selection ‚Äî check_no_multiple_selection","text":"Raises error check fails, otherwise, returns NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_no_multiple_selection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks that the extract_input specification does not allow multiple selection ‚Äî check_no_multiple_selection","text":"Stops condition met.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector.html","id":null,"dir":"Reference","previous_headings":"","what":"Check selector ‚Äî check_selector","title":"Check selector ‚Äî check_selector","text":"Check selector","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check selector ‚Äî check_selector","text":"","code":"check_selector(selector)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check selector ‚Äî check_selector","text":"selector (list) selector elements generated data_extract_srv.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check selector ‚Äî check_selector","text":"Raises error check fails, otherwise, returns selector parameter, invisibly unchanged.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_dataname.html","id":null,"dir":"Reference","previous_headings":"","what":"Check selector dataname element ‚Äî check_selector_dataname","title":"Check selector dataname element ‚Äî check_selector_dataname","text":"Check selector dataname element","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_dataname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check selector dataname element ‚Äî check_selector_dataname","text":"","code":"check_selector_dataname(dataname)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_dataname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check selector dataname element ‚Äî check_selector_dataname","text":"dataname (character(1)) selector element.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_dataname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check selector dataname element ‚Äî check_selector_dataname","text":"Raises error check fails, otherwise, returns dataname parameter, invisibly unchanged.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Check selector filters element ‚Äî check_selector_filters","title":"Check selector filters element ‚Äî check_selector_filters","text":"Check selector filters element","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check selector filters element ‚Äî check_selector_filters","text":"","code":"check_selector_filters(filters)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check selector filters element ‚Äî check_selector_filters","text":"filters (list) selector element generated data_extract_srv.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_filters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check selector filters element ‚Äî check_selector_filters","text":"Raises error check fails, otherwise returns NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_internal_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Check selector internal_id element ‚Äî check_selector_internal_id","title":"Check selector internal_id element ‚Äî check_selector_internal_id","text":"Check selector internal_id element","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_internal_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check selector internal_id element ‚Äî check_selector_internal_id","text":"","code":"check_selector_internal_id(internal_id)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_internal_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check selector internal_id element ‚Äî check_selector_internal_id","text":"internal_id (character(1)) selector element generated data_extract_srv.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_internal_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check selector internal_id element ‚Äî check_selector_internal_id","text":"Raises error check fails, otherwise, returns internal_id parameter, invisibly unchanged.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Check selector keys element ‚Äî check_selector_keys","title":"Check selector keys element ‚Äî check_selector_keys","text":"Check selector keys element","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check selector keys element ‚Äî check_selector_keys","text":"","code":"check_selector_keys(keys)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check selector keys element ‚Äî check_selector_keys","text":"keys (character) selector element generated data_extract_srv.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check selector keys element ‚Äî check_selector_keys","text":"Raises error check fails, otherwise, returns keys parameter, invisibly unchanged.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_reshape.html","id":null,"dir":"Reference","previous_headings":"","what":"Check selector reshape element ‚Äî check_selector_reshape","title":"Check selector reshape element ‚Äî check_selector_reshape","text":"Check selector reshape element","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_reshape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check selector reshape element ‚Äî check_selector_reshape","text":"","code":"check_selector_reshape(reshape)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_reshape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check selector reshape element ‚Äî check_selector_reshape","text":"reshape (logical(1)) selector element generated data_extract_srv.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_reshape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check selector reshape element ‚Äî check_selector_reshape","text":"Raises error check fails, otherwise, returns reshape parameter, invisibly unchanged.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Check selector select element ‚Äî check_selector_select","title":"Check selector select element ‚Äî check_selector_select","text":"Check selector select element","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check selector select element ‚Äî check_selector_select","text":"","code":"check_selector_select(select)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check selector select element ‚Äî check_selector_select","text":"select (character) selector element generated data_extract_srv.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/check_selector_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check selector select element ‚Äî check_selector_select","text":"Raises error check fails, otherwise, returns select parameter, invisibly unchanged.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_labeled.html","id":null,"dir":"Reference","previous_headings":"","what":"Set ","title":"Set ","text":"often useful choices_selected() marks drop-boxes shiny::selectInput().","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_labeled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set ","text":"","code":"choices_labeled(choices, labels, subset = NULL, types = NULL)  # S3 method for class 'choices_labeled' print(x, ...)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_labeled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set ","text":"choices (character factor numeric logical) vector. labels (character) vector containing labels applied choices. NA \"Label Missing\" used. subset (character factor numeric logical) vector subset choices. useful variables need named. argument used, returned vector match order. types (character) vector containing types columns used applying appropriate icons choices_selected drop box (e.g. \"numeric\"). x object used select method. ... arguments passed methods.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_labeled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set ","text":"Named character vector.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_labeled.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set ","text":"either choices labels factors, coerced character. Duplicated elements choices get removed.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_labeled.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Set ","text":"print(choices_labeled): Print choices_labeled object","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_labeled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set ","text":"","code":"library(teal.data) #> Loading required package: teal.code library(shiny)  ADSL <- rADSL ADTTE <- rADTTE  choices1 <- choices_labeled(names(ADSL), col_labels(ADSL, fill = FALSE)) choices2 <- choices_labeled(ADTTE$PARAMCD, ADTTE$PARAM)  # if only a subset of variables are needed, use subset argument choices3 <- choices_labeled(   names(ADSL),   col_labels(ADSL, fill = FALSE),   subset = c(\"ARMCD\", \"ARM\") )  ui <- fluidPage(   selectInput(\"c1\",     label = \"Choices from ADSL\",     choices = choices1,     selected = choices1[1]   ),   selectInput(\"c2\",     label = \"Choices from ADTTE\",     choices = choices2,     selected = choices2[1]   ),   selectInput(\"c3\",     label = \"Arm choices from ADSL\",     choices = choices3,     selected = choices3[1]   ) ) server <- function(input, output) {}  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_selected.html","id":null,"dir":"Reference","previous_headings":"","what":"Choices selected ‚Äî choices_selected","title":"Choices selected ‚Äî choices_selected","text":"Construct single list containing available choices, default selected value, additional settings order choices selected elements appearing first whether block user making selections. Can used UI input elements teal.widgets::optionalSelectInput().","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_selected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choices selected ‚Äî choices_selected","text":"","code":"choices_selected(   choices,   selected = if (inherits(choices, \"delayed_data\")) NULL else choices[1],   keep_order = FALSE,   fixed = FALSE )  is.choices_selected(x)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_selected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choices selected ‚Äî choices_selected","text":"choices (character) vector possible choices delayed_data object. See variable_choices() value_choices(). selected (character) vector preselected options, (delayed_choices) object (delayed_data) object. delayed_data object choices must also delayed_data object. supplied default first element choices choices vector, NULL choices delayed_data object. keep_order (logical) case FALSE selected variables top drop-field. fixed (logical) optional, whether block user select choices. x (choices_selected) object check.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_selected.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choices selected ‚Äî choices_selected","text":"choices_selected returns list choices_selected, encapsulating specified choices, selected, keep_order fixed. .choices_selected returns TRUE x inherits choices_selected object, FALSE otherwise.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_selected.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Choices selected ‚Äî choices_selected","text":"Please note order selected always follow order choices. keep_order argument set false run following code inside:   case want keep specific order choices, set keep_order TRUE.","code":"choices <- c(selected, setdiff(choices, selected))"},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_selected.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Choices selected ‚Äî choices_selected","text":".choices_selected(): Check object choices_selected class","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/choices_selected.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Choices selected ‚Äî choices_selected","text":"","code":"library(shiny) library(teal.widgets)  ADSL <- teal.data::rADSL choices_selected(variable_choices(ADSL), \"SEX\") #> $choices #> number of choices: 55  #>  #> SEX: Sex #> STUDYID: Study Identifier #> USUBJID: Unique Subject Identifier #> SUBJID: Subject Identifier for the Study #> SITEID: Study Site Identifier #> AGE: Age #> AGEU: Age Units #> RACE: Race #> ETHNIC: Ethnicity #> COUNTRY: Country #> DTHFL: Subject Death Flag #> INVID: Investigator Identifier #> INVNAM: Investigator Name #> ARM: Description of Planned Arm #> ARMCD: Planned Arm Code #> ACTARM: Description of Actual Arm #> ACTARMCD: Actual Arm Code #> TRT01P: Planned Treatment for Period 01 #> TRT01A: Actual Treatment for Period 01 #> TRT02P: Planned Treatment for Period 02 #> TRT02A: Actual Treatment for Period 02 #> REGION1: Geographic Region 1 #> STRATA1: Stratification Factor 1 #> STRATA2: Stratification Factor 2 #> BMRKR1: Continuous Level Biomarker 1 #> BMRKR2: Categorical Level Biomarker 2 #> ITTFL: Intent-To-Treat Population Flag #> SAFFL: Safety Population Flag #> BMEASIFL: Response Evaluable Population Flag #> BEP01FL: Biomarker Evaluable Population Flag #> AEWITHFL: AE Leading to Drug Withdrawal Flag #> RANDDT: Date of Randomization #> TRTSDTM: Datetime of First Exposure to Treatment #> TRTEDTM: Datetime of Last Exposure to Treatment #> TRT01SDTM: Datetime of First Exposure to Treatment in Period 01 #> TRT01EDTM: Datetime of Last Exposure in Period 01 #> TRT02SDTM: Datetime of First Exposure to Treatment in Period 02 #> TRT02EDTM: Datetime of Last Exposure to Treatment in Period 02 #> AP01SDTM: Period 01 Start Datetime #> AP01EDTM: Period 01 End Datetime #> AP02SDTM: Period 02 Start Datetime #> AP02EDTM: Period 02 End Datetime #> EOSSTT: End of Study Status #> EOTSTT: End of Treatment Status #> EOSDT: End of Study Date #> EOSDY: End of Study Relative Day #> DCSREAS: Reason for Discontinuation from Study #> DTHDT: Date of Death #> DTHCAUS: Cause of Death #> DTHCAT: Cause of Death Category #> LDDTHELD: Elapsed Days from Last Dose to Death #> LDDTHGR1: Last Dose to Death - Days Elapsed Grp 1 #> LSTALVDT: Date Last Known Alive #> DTHADY: Relative Day of Death #> ADTHAUT: Autopsy Performed #>  #>  #> $selected #> [1] \"SEX\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"  # How to select nothing # use an empty character choices_selected(   choices = c(\"\", \"A\", \"B\", \"C\"),   selected = \"\" ) #> $choices #> [1] \"\"  \"A\" \"B\" \"C\" #>  #> $selected #> [1] \"\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"  # How to allow the user to select nothing # use an empty character choices_selected(   choices = c(\"A\", \"\", \"B\", \"C\"),   selected = \"A\" ) #> $choices #> [1] \"A\" \"\"  \"B\" \"C\" #>  #> $selected #> [1] \"A\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"   # How to make Nothing the Xth choice # just use keep_order choices_selected(   choices = c(\"A\", \"\", \"B\", \"C\"),   selected = \"A\",   keep_order = TRUE ) #> $choices #> [1] \"A\" \"\"  \"B\" \"C\" #>  #> $selected #> [1] \"A\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"   # How to give labels to selections # by adding names - choices will be replaced by \"name\" in UI, not in code choices_selected(   choices = c(\"name for A\" = \"A\", \"Name for nothing\" = \"\", \"name for b\" = \"B\", \"name for C\" = \"C\"),   selected = \"A\" ) #> $choices #>       name for A Name for nothing       name for b       name for C  #>              \"A\"               \"\"              \"B\"              \"C\"  #>  #> $selected #> [1] \"A\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"  # by using choices_labeled # labels will be shown behind the choice choices_selected(   choices = choices_labeled(     c(\"A\", \"\", \"B\", \"C\"),     c(\"name for A\", \"nothing\", \"name for B\", \"name for C\")   ),   selected = \"A\" ) #> $choices #> number of choices: 4  #>  #> A: name for A #> : nothing #> B: name for B #> C: name for C #>  #>  #> $selected #> [1] \"A\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"  # Passing a `delayed_data` object to `selected` choices_selected(   choices = variable_choices(\"ADSL\"),   selected = variable_choices(\"ADSL\", subset = c(\"STUDYID\")) ) #> choices_selected with delayed data:  ADSL #> $ choices #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   NULL #>   $ key #>   NULL #> $ selected #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   [1] \"STUDYID\" #>   $ key #>   NULL #> $ keep_order #> [1] FALSE #> $ fixed #> [1] FALSE  # Passing `delayed_choices` object - semantically identical objects: choices_selected(choices = letters, selected = letters) #> $choices #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $selected #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\" choices_selected(choices = letters, selected = all_choices()) #> $choices #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $selected #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"  choices_selected(   choices = setNames(LETTERS[1:5], paste(\"Letter\", LETTERS[1:5])),   selected = \"E\" ) #> $choices #> Letter E Letter A Letter B Letter C Letter D  #>      \"E\"      \"A\"      \"B\"      \"C\"      \"D\"  #>  #> $selected #> [1] \"E\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\" choices_selected(   choices = setNames(LETTERS[1:5], paste(\"Letter\", LETTERS[1:5])),   selected = last_choice() ) #> $choices #> Letter E Letter A Letter B Letter C Letter D  #>      \"E\"      \"A\"      \"B\"      \"C\"      \"D\"  #>  #> $selected #> Letter E  #>      \"E\"  #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"  # functional form (subsetting for factor variables only) of choices_selected # with delayed data loading choices_selected(variable_choices(\"ADSL\", subset = function(data) {   idx <- vapply(data, is.factor, logical(1))   names(data)[idx] })) #> choices_selected with delayed data:  ADSL #> $ choices #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   function (data)  #> { #>     idx <- vapply(data, is.factor, logical(1)) #>     names(data)[idx] #> } #> <environment: 0x559602a1cdd0> #>   $ key #>   NULL #> $ selected #> NULL #> $ keep_order #> [1] FALSE #> $ fixed #> [1] FALSE  cs <- choices_selected(   choices = c(\"A\", \"B\", \"C\"),   selected = \"A\" )  ui <- fluidPage(   optionalSelectInput(     inputId = \"id\",     choices = cs$choices,     selected = cs$selected   ) )  server <- function(input, output, session) {} if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.transform/reference/compose_and_enable_validators.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compose validators from data_extract_multiple_srv ‚Äî compose_and_enable_validators","title":"Function to compose validators from data_extract_multiple_srv ‚Äî compose_and_enable_validators","text":"function takes output data_extract_multiple_srv collates shinyvalidate::InputValidators returned single validator enables .","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/compose_and_enable_validators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compose validators from data_extract_multiple_srv ‚Äî compose_and_enable_validators","text":"","code":"compose_and_enable_validators(iv, selector_list, validator_names = NULL)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/compose_and_enable_validators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compose validators from data_extract_multiple_srv ‚Äî compose_and_enable_validators","text":"iv (shinyvalidate::InputValidator) validator. selector_list (reactive named list reactives). Typically output data_extract_multiple_srv. validators list (specifically selector_list()[[validator_names]]()iv) added iv. validator_names (character NULL). character validators elements selector_list() whose name list added. NULL validators added","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/compose_and_enable_validators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compose validators from data_extract_multiple_srv ‚Äî compose_and_enable_validators","text":"(shinyvalidate::InputValidator) enabled iv appropriate validators added .","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/compose_and_enable_validators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to compose validators from data_extract_multiple_srv ‚Äî compose_and_enable_validators","text":"","code":"library(shiny) library(shinyvalidate) library(shinyjs) #>  #> Attaching package: ‚Äòshinyjs‚Äô #> The following object is masked from ‚Äòpackage:shiny‚Äô: #>  #>     runExample #> The following object is masked from ‚Äòpackage:teal.data‚Äô: #>  #>     show #> The following object is masked from ‚Äòpackage:teal.code‚Äô: #>  #>     show #> The following objects are masked from ‚Äòpackage:methods‚Äô: #>  #>     removeClass, show library(teal.widgets)  iris_extract <- data_extract_spec(   dataname = \"iris\",   select = select_spec(     label = \"Select variable:\",     choices = variable_choices(iris, colnames(iris)),     selected = \"Sepal.Length\",     multiple = TRUE,     fixed = FALSE   ) )  data_list <- list(iris = reactive(iris))  ui <- fluidPage(   useShinyjs(),   standard_layout(     output = verbatimTextOutput(\"out1\"),     encoding = tagList(       data_extract_ui(         id = \"x_var\",         label = \"Please select an X column\",         data_extract_spec = iris_extract       ),       data_extract_ui(         id = \"y_var\",         label = \"Please select a Y column\",         data_extract_spec = iris_extract       ),       data_extract_ui(         id = \"col_var\",         label = \"Please select a color column\",         data_extract_spec = iris_extract       )     )   ) )  server <- function(input, output, session) {   selector_list <- data_extract_multiple_srv(     list(x_var = iris_extract, y_var = iris_extract, col_var = iris_extract),     datasets = data_list,     select_validation_rule = list(       x_var = sv_required(\"Please select an X column\"),       y_var = compose_rules(         sv_required(\"Exactly 2 'Y' column variables must be chosen\"),         function(x) if (length(x) != 2) \"Exactly 2 'Y' column variables must be chosen\"       )     )   )   iv_r <- reactive({     iv <- InputValidator$new()     compose_and_enable_validators(       iv,       selector_list,       # if validator_names = NULL then all validators are used       # to turn on only \"x_var\" then set this argument to \"x_var\"       validator_names = NULL     )   })    output$out1 <- renderPrint({     if (iv_r()$is_valid()) {       ans <- lapply(selector_list(), function(x) {         cat(format_data_extract(x()), \"\\n\\n\")       })     } else {       \"Check that you have made a valid selection\"     }   }) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.transform/reference/cond_data_extract_single_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a panel that displays (with filter and column selection) conditionally on input[ns(","title":"Creates a panel that displays (with filter and column selection) conditionally on input[ns(","text":"Creates panel displays (filter column selection) conditionally input[ns(\"dataset\")] == dataname","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/cond_data_extract_single_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a panel that displays (with filter and column selection) conditionally on input[ns(","text":"","code":"cond_data_extract_single_ui(ns, single_data_extract_spec)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/cond_data_extract_single_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a panel that displays (with filter and column selection) conditionally on input[ns(","text":"ns (function) shiny namespace function. single_data_extract_spec (data_extract_spec) specification extraction data application initialization. Generated data_extract_spec().","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/cond_data_extract_single_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a panel that displays (with filter and column selection) conditionally on input[ns(","text":"shiny.tag HTML code panel.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/convert_teal_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensures datasets is a list of reactive expression ‚Äî convert_teal_data","title":"Ensures datasets is a list of reactive expression ‚Äî convert_teal_data","text":"Ensures datasets list reactive expression","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/convert_teal_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensures datasets is a list of reactive expression ‚Äî convert_teal_data","text":"","code":"convert_teal_data(datasets)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/convert_teal_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensures datasets is a list of reactive expression ‚Äî convert_teal_data","text":"datasets (reactive teal_data list) data.frame wrapped reactive expression.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/convert_teal_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensures datasets is a list of reactive expression ‚Äî convert_teal_data","text":"List reactive expressions contains individual datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_filter_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Handles events emitted from the UI generated by data_extract_filter_ui ‚Äî data_extract_filter_srv","title":"Handles events emitted from the UI generated by data_extract_filter_ui ‚Äî data_extract_filter_srv","text":"Handles events emitted UI generated data_extract_filter_ui","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_filter_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handles events emitted from the UI generated by data_extract_filter_ui ‚Äî data_extract_filter_srv","text":"","code":"data_extract_filter_srv(id, datasets, filter)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_filter_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handles events emitted from the UI generated by data_extract_filter_ui ‚Äî data_extract_filter_srv","text":"id (character) id string. datasets (named list) list reactive data.frame type objects. filter (filter_spec) filter generated call filter_spec().","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_filter_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handles events emitted from the UI generated by data_extract_filter_ui ‚Äî data_extract_filter_srv","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_filter_srv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Handles events emitted from the UI generated by data_extract_filter_ui ‚Äî data_extract_filter_srv","text":"shiny module server updates values vals teal.widgets::optionalSelectInput() widget. responsible setting initial values subsequent updates vals widget based input col widget.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_filter_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a shiny.tag object with the UI for a filter_spec object ‚Äî data_extract_filter_ui","title":"Returns a shiny.tag object with the UI for a filter_spec object ‚Äî data_extract_filter_ui","text":"Returns shiny.tag object UI filter_spec object","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_filter_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a shiny.tag object with the UI for a filter_spec object ‚Äî data_extract_filter_ui","text":"","code":"data_extract_filter_ui(filter, id = \"filter\")"},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_filter_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a shiny.tag object with the UI for a filter_spec object ‚Äî data_extract_filter_ui","text":"filter (filter_spec) object generated filter_spec(). id (character(1)) shiny inputId generated shiny.tag.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_filter_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a shiny.tag object with the UI for a filter_spec object ‚Äî data_extract_filter_ui","text":"shiny.tag defining filter_spec's UI element.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_filter_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns a shiny.tag object with the UI for a filter_spec object ‚Äî data_extract_filter_ui","text":"Creates two optionSelectInput elements (one column one values) based definition filter_spec() object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_multiple_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a named list of data_extract_srv output ‚Äî data_extract_multiple_srv","title":"Creates a named list of data_extract_srv output ‚Äî data_extract_multiple_srv","text":"data_extract_multiple_srv loops list data_extract given runs data_extract_srv one returning list reactive objects.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_multiple_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a named list of data_extract_srv output ‚Äî data_extract_multiple_srv","text":"","code":"data_extract_multiple_srv(data_extract, datasets, ...)  # S3 method for class 'reactive' data_extract_multiple_srv(data_extract, datasets, ...)  # S3 method for class 'FilteredData' data_extract_multiple_srv(data_extract, datasets, ...)  # S3 method for class 'list' data_extract_multiple_srv(   data_extract,   datasets,   join_keys = NULL,   select_validation_rule = NULL,   filter_validation_rule = NULL,   dataset_validation_rule = if (is.null(select_validation_rule) &&     is.null(filter_validation_rule)) {      NULL  } else {          shinyvalidate::sv_required(\"Please select a dataset\")  },   ... )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_multiple_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a named list of data_extract_srv output ‚Äî data_extract_multiple_srv","text":"data_extract (named list data_extract_spec objects) list data_extract_spec objects. names elements list need correspond ids passed data_extract_ui. See example details. datasets (FilteredData list reactive non-reactive data.frame) object containing data either form FilteredData list data.frame. passing list non-reactive data.frame objects, converted reactive data.frames internally. passing list reactive non-reactive data.frame objects, argument join_keys required also. ... additional argument join_keys required datasets list data.frame. shall contain keys per dataset datasets. join_keys (join_keys NULL) join keys per dataset datasets. select_validation_rule (NULL function named list function) shinyvalidate input validation select parts data_extract_ui. data_extract require validation function can used directly (.e. select_validation_rule = shinyvalidate::sv_required()). fine-grained control use list: select_validation_rule = list(extract_1 = sv_required(), extract2 = ~ (length(.) > 2) \"Error\") NULL validation added. See example details. filter_validation_rule (NULL function named list function) select_validation_rule filter (values) part data_extract_ui. dataset_validation_rule (NULL function named list function) select_validation_rule choose dataset part data_extract_ui","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_multiple_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a named list of data_extract_srv output ‚Äî data_extract_multiple_srv","text":"reactive named list containing outputs data_extract_srv(). Output list names data_extract input argument.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_multiple_srv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a named list of data_extract_srv output ‚Äî data_extract_multiple_srv","text":"","code":"library(shiny) library(shinyvalidate) library(shinyjs) library(teal.widgets)  iris_select <- data_extract_spec(   dataname = \"iris\",   select = select_spec(     label = \"Select variable:\",     choices = variable_choices(iris, colnames(iris)),     selected = \"Sepal.Length\",     multiple = TRUE,     fixed = FALSE   ) )  iris_filter <- data_extract_spec(   dataname = \"iris\",   filter = filter_spec(     vars = \"Species\",     choices = c(\"setosa\", \"versicolor\", \"virginica\"),     selected = \"setosa\",     multiple = TRUE   ) )  data_list <- list(iris = reactive(iris))  ui <- fluidPage(   useShinyjs(),   standard_layout(     output = verbatimTextOutput(\"out1\"),     encoding = tagList(       data_extract_ui(         id = \"x_var\",         label = \"Please select an X column\",         data_extract_spec = iris_select       ),       data_extract_ui(         id = \"species_var\",         label = \"Please select 2 Species\",         data_extract_spec = iris_filter       )     )   ) )  server <- function(input, output, session) {   selector_list <- data_extract_multiple_srv(     list(x_var = iris_select, species_var = iris_filter),     datasets = data_list,     select_validation_rule = list(       x_var = sv_required(\"Please select an X column\")     ),     filter_validation_rule = list(       species_var = compose_rules(         sv_required(\"Exactly 2 Species must be chosen\"),         function(x) if (length(x) != 2) \"Exactly 2 Species must be chosen\"       )     )   )   iv_r <- reactive({     iv <- InputValidator$new()     compose_and_enable_validators(       iv,       selector_list,       validator_names = NULL     )   })    output$out1 <- renderPrint({     if (iv_r()$is_valid()) {       ans <- lapply(selector_list(), function(x) {         cat(format_data_extract(x()), \"\\n\\n\")       })     } else {       \"Please fix errors in your selection\"     }   }) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_read_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a reactive list with values read from the inputs of data_extract_spec ‚Äî data_extract_read_srv","title":"Returns a reactive list with values read from the inputs of data_extract_spec ‚Äî data_extract_read_srv","text":"Returns reactive list values read inputs data_extract_spec","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_read_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a reactive list with values read from the inputs of data_extract_spec ‚Äî data_extract_read_srv","text":"","code":"data_extract_read_srv(   id,   datasets,   single_data_extract_spec,   iv,   select_validation_rule = NULL,   filter_validation_rule = NULL )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_read_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a reactive list with values read from the inputs of data_extract_spec ‚Äî data_extract_read_srv","text":"id (character) id string. datasets (named list) list reactive data.frame type objects. single_data_extract_spec (data_extract_spec) data_extract_spec() object handle.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_read_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a reactive list with values read from the inputs of data_extract_spec ‚Äî data_extract_read_srv","text":"shiny::reactive reactive list reactive values read UI.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_read_srv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns a reactive list with values read from the inputs of data_extract_spec ‚Äî data_extract_read_srv","text":"Reads UI inputs single data_extract_spec object running teal application. Returns reactive list reactive values read input. returned list keys corresponding UI inputs: select, filters, always_selected, reshape.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_select_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a shiny.tag.list object with the UI for a select_spec object ‚Äî data_extract_select_ui","title":"Returns a shiny.tag.list object with the UI for a select_spec object ‚Äî data_extract_select_ui","text":"Returns shiny.tag.list object UI select_spec object","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_select_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a shiny.tag.list object with the UI for a select_spec object ‚Äî data_extract_select_ui","text":"","code":"data_extract_select_ui(select, id = \"select\")"},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_select_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a shiny.tag.list object with the UI for a select_spec object ‚Äî data_extract_select_ui","text":"select (select_spec) definition select spec element. Setting select_spec() ordered = TRUE makes selector responsive variable selection order. id (character(1)) shiny inputId element.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_select_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a shiny.tag.list object with the UI for a select_spec object ‚Äî data_extract_select_ui","text":"shiny.tag.list UI.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_single_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"The server function for a single data_extract_spec object ‚Äî data_extract_single_srv","title":"The server function for a single data_extract_spec object ‚Äî data_extract_single_srv","text":"server function single data_extract_spec object","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_single_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The server function for a single data_extract_spec object ‚Äî data_extract_single_srv","text":"","code":"data_extract_single_srv(id, datasets, single_data_extract_spec)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_single_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The server function for a single data_extract_spec object ‚Äî data_extract_single_srv","text":"id (character) id string. datasets (named list) list reactive data.frame type objects. single_data_extract_spec (data_extract_spec) data_extract_spec() object handle.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_single_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The server function for a single data_extract_spec object ‚Äî data_extract_single_srv","text":"NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_single_srv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The server function for a single data_extract_spec object ‚Äî data_extract_single_srv","text":"Shiny server function handling single data_extract_spec object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_single_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a shiny.tag with the UI elements for a data_extract_spec ‚Äî data_extract_single_ui","title":"Returns a shiny.tag with the UI elements for a data_extract_spec ‚Äî data_extract_single_ui","text":"Returns shiny.tag UI elements data_extract_spec","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_single_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a shiny.tag with the UI elements for a data_extract_spec ‚Äî data_extract_single_ui","text":"","code":"data_extract_single_ui(id = NULL, single_data_extract_spec)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_single_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a shiny.tag with the UI elements for a data_extract_spec ‚Äî data_extract_single_ui","text":"id (character(1)) id module. single_data_extract_spec (data_extract_spec) data_extract_spec() object handle.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_single_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a shiny.tag with the UI elements for a data_extract_spec ‚Äî data_extract_single_ui","text":"shiny.tag HTML element defining UI.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_single_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns a shiny.tag with the UI elements for a data_extract_spec ‚Äî data_extract_single_ui","text":"Creates shiny.tag element defining UI elements corresponding single data_extract_spec object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Data extract input for teal modules ‚Äî data_extract_spec","title":"Data extract input for teal modules ‚Äî data_extract_spec","text":"Data extract input can used filter select columns data set. function enables input teal. Please use constructor function data_extract_spec set .","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data extract input for teal modules ‚Äî data_extract_spec","text":"","code":"data_extract_spec(dataname, select = NULL, filter = NULL, reshape = FALSE)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data extract input for teal modules ‚Äî data_extract_spec","text":"dataname (character) name dataset extracted. select (NULL select_spec-S3 class delayed_select_spec) Columns selected input dataset mentioned dataname. setup can created using select_spec function. filter (NULL filter_spec respective delayed version) Setup filtering key columns inside dataset. setup can created using filter_spec function. Please note select filter set NULL, result filter spec UI variables possible choices select spec multiple set TRUE. reshape (logical) whether reshape long wide. Note used case long dataset multiple keys selected filter part.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data extract input for teal modules ‚Äî data_extract_spec","text":"data_extract_spec object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_spec.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Data extract input for teal modules ‚Äî data_extract_spec","text":"checks based columns can done data referred name.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_spec.html","id":"module-development","dir":"Reference","previous_headings":"","what":"Module Development","title":"Data extract input for teal modules ‚Äî data_extract_spec","text":"teal.transform uses object construct UI element module.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_spec.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data extract input for teal modules ‚Äî data_extract_spec","text":"select_spec filter_spec","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data extract input for teal modules ‚Äî data_extract_spec","text":"","code":"adtte_filters <- filter_spec(   vars = c(\"PARAMCD\", \"CNSR\"),   sep = \"-\",   choices = c(\"OS-1\" = \"OS-1\", \"OS-0\" = \"OS-0\", \"PFS-1\" = \"PFS-1\"),   selected = \"OS-1\",   multiple = FALSE,   label = \"Choose endpoint and Censor\" )  data_extract_spec(   dataname = \"ADTTE\",   filter = adtte_filters,   select = select_spec(     choices = c(\"AVAL\", \"BMRKR1\", \"AGE\"),     selected = c(\"AVAL\", \"BMRKR1\"),     multiple = TRUE,     fixed = FALSE,     label = \"Column\"   ) ) #> $dataname #> [1] \"ADTTE\" #>  #> $select #> $choices #>     AVAL   BMRKR1      AGE  #>   \"AVAL\" \"BMRKR1\"    \"AGE\"  #>  #> $selected #>     AVAL   BMRKR1  #>   \"AVAL\" \"BMRKR1\"  #>  #> $multiple #> [1] TRUE #>  #> $fixed #> [1] FALSE #>  #> $always_selected #> NULL #>  #> $ordered #> [1] FALSE #>  #> $label #> [1] \"Column\" #>  #> attr(,\"class\") #> [1] \"select_spec\" #>  #> $filter #> $filter[[1]] #> filter_spec with delayed data: #> $ vars_choices #> [1] \"PARAMCD\" \"CNSR\"    #> $ vars_selected #> [1] \"PARAMCD\" \"CNSR\"    #> $ vars_label #> NULL #> $ vars_fixed #> [1] TRUE #> $ vars_multiple #> [1] TRUE #> $ choices #>    OS-1    OS-0   PFS-1  #>  \"OS-1\"  \"OS-0\" \"PFS-1\"  #> $ selected #> [1] \"OS-1\" #> $ label #> [1] \"Choose endpoint and Censor\" #> $ multiple #> [1] FALSE #> $ fixed #> [1] FALSE #> $ sep #> [1] \"-\" #> $ drop_keys #> [1] FALSE #> $ dataname #> [1] \"ADTTE\" #> $ initialized #> [1] FALSE #>  #>  #> $reshape #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"data_extract_spec\"  data_extract_spec(   dataname = \"ADSL\",   filter = NULL,   select = select_spec(     choices = c(\"AGE\", \"SEX\", \"USUBJID\"),     selected = c(\"SEX\"),     multiple = FALSE,     fixed = FALSE   ) ) #> $dataname #> [1] \"ADSL\" #>  #> $select #> $choices #>       AGE       SEX   USUBJID  #>     \"AGE\"     \"SEX\" \"USUBJID\"  #>  #> $selected #>   SEX  #> \"SEX\"  #>  #> $multiple #> [1] FALSE #>  #> $fixed #> [1] FALSE #>  #> $always_selected #> NULL #>  #> $ordered #> [1] FALSE #>  #> $label #> [1] \"Select\" #>  #> attr(,\"class\") #> [1] \"select_spec\" #>  #> $filter #> NULL #>  #> $reshape #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"data_extract_spec\" data_extract_spec(   dataname = \"ADSL\",   filter = filter_spec(     vars = variable_choices(\"ADSL\", subset = c(\"AGE\"))   ) ) #> data_extract_spec with delayed data: ADSL #>  #> $ dataname #> [1] \"ADSL\" #> $ select #> NULL #> $ filter #>   [[1]] #>     filter_spec with delayed data: #>     $ vars_choices #>       variable_choices with delayed data: ADSL #>       $ data #>       [1] \"ADSL\" #>       $ subset #>       [1] \"AGE\" #>       $ key #>       NULL #>     $ vars_selected #>       variable_choices with delayed data: ADSL #>       $ data #>       [1] \"ADSL\" #>       $ subset #>       [1] \"AGE\" #>       $ key #>       NULL #>     $ vars_label #>     NULL #>     $ vars_fixed #>     [1] TRUE #>     $ vars_multiple #>     [1] TRUE #>     $ choices #>     NULL #>     $ selected #>     NULL #>     $ label #>     [1] \"Filter by\" #>     $ multiple #>     [1] FALSE #>     $ fixed #>     [1] FALSE #>     $ sep #>     [1] \" - \" #>     $ drop_keys #>     [1] FALSE #>     $ dataname #>     [1] \"ADSL\" #>     $ initialized #>     [1] FALSE #> $ reshape #> [1] FALSE  dynamic_filter <- filter_spec(   vars = choices_selected(variable_choices(\"ADSL\"), \"COUNTRY\"),   multiple = TRUE ) data_extract_spec(   dataname = \"ADSL\",   filter = dynamic_filter ) #> data_extract_spec with delayed data: ADSL #>  #> $ dataname #> [1] \"ADSL\" #> $ select #> NULL #> $ filter #>   [[1]] #>     filter_spec with delayed data: #>     $ vars_choices #>       variable_choices with delayed data: ADSL #>       $ data #>       [1] \"ADSL\" #>       $ subset #>       NULL #>       $ key #>       NULL #>     $ vars_selected #>     [1] \"COUNTRY\" #>     $ vars_label #>     [1] \"Filter by\" #>     $ vars_fixed #>     [1] FALSE #>     $ vars_multiple #>     [1] FALSE #>     $ choices #>     NULL #>     $ selected #>     NULL #>     $ label #>     NULL #>     $ multiple #>     [1] TRUE #>     $ fixed #>     [1] FALSE #>     $ sep #>     [1] \" - \" #>     $ drop_keys #>     [1] FALSE #>     $ dataname #>     [1] \"ADSL\" #>     $ initialized #>     [1] FALSE #> $ reshape #> [1] FALSE"},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction of the selector(s) details ‚Äî data_extract_srv","title":"Extraction of the selector(s) details ‚Äî data_extract_srv","text":"Extracting details selection(s) data_extract_ui elements.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction of the selector(s) details ‚Äî data_extract_srv","text":"","code":"data_extract_srv(id, datasets, data_extract_spec, ...)  # S3 method for class 'FilteredData' data_extract_srv(id, datasets, data_extract_spec, ...)  # S3 method for class 'list' data_extract_srv(   id,   datasets,   data_extract_spec,   join_keys = NULL,   select_validation_rule = NULL,   filter_validation_rule = NULL,   dataset_validation_rule = if (is.null(select_validation_rule) &&     is.null(filter_validation_rule)) {      NULL  } else {          shinyvalidate::sv_required(\"Please select a dataset\")  },   ... )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction of the selector(s) details ‚Äî data_extract_srv","text":"id ID string corresponds ID used call module's UI function. datasets (FilteredData list reactive non-reactive data.frame) object containing data either form FilteredData list data.frame. passing list non-reactive data.frame objects, converted reactive data.frames internally. passing list reactive non-reactive data.frame objects, argument join_keys required also. data_extract_spec (data_extract_spec list data_extract_spec) list data filter select information constructed data_extract_spec. ... additional argument join_keys required datasets list data.frame. shall contain keys per dataset datasets. join_keys (join_keys NULL) keys per dataset datasets. select_validation_rule (NULL function) shinyvalidate input validation select parts data_extract_ui. can use validation function directly (.e. select_validation_rule = shinyvalidate::sv_required()) fine-grained control use function: select_validation_rule = ~ (length(.) > 2) \"Error\". NULL validation added. See example details. filter_validation_rule (NULL function) select_validation_rule filter (values) part data_extract_ui. dataset_validation_rule (NULL function) select_validation_rule choose dataset part data_extract_ui","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction of the selector(s) details ‚Äî data_extract_srv","text":"reactive list containing following fields: filters: list information filters applied data set. select: variables selected dataset. always_selected: column names data set always selected. reshape: Whether reshape long wide applied . dataname: name data set. internal_id: id corresponding shiny input element. keys: names columns can used merge data set. iv: shinyvalidate::InputValidator containing validator data_extract.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_srv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extraction of the selector(s) details ‚Äî data_extract_srv","text":"data_extract_srv","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_srv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraction of the selector(s) details ‚Äî data_extract_srv","text":"","code":"library(shiny) library(shinyvalidate) library(teal.data) library(teal.widgets)  # Sample ADSL dataset ADSL <- data.frame(   STUDYID = \"A\",   USUBJID = LETTERS[1:10],   SEX = rep(c(\"F\", \"M\"), 5),   AGE = rpois(10, 30),   BMRKR1 = rlnorm(10) )  # Specification for data extraction adsl_extract <- data_extract_spec(   dataname = \"ADSL\",   filter = filter_spec(vars = \"SEX\", choices = c(\"F\", \"M\"), selected = \"F\"),   select = select_spec(     label = \"Select variable:\",     choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\")),     selected = \"AGE\",     multiple = TRUE,     fixed = FALSE   ) )  # Using reactive list of data.frames data_list <- list(ADSL = reactive(ADSL))  join_keys <- join_keys(join_key(\"ADSL\", \"ADSL\", c(\"STUDYID\", \"USUBJID\")))  # App: data extraction with validation ui <- fluidPage(   standard_layout(     output = verbatimTextOutput(\"out1\"),     encoding = tagList(       data_extract_ui(         id = \"adsl_var\",         label = \"ADSL selection\",         data_extract_spec = adsl_extract       )     )   ) ) server <- function(input, output, session) {   adsl_reactive_input <- data_extract_srv(     id = \"adsl_var\",     datasets = data_list,     data_extract_spec = adsl_extract,     join_keys = join_keys,     select_validation_rule = sv_required(\"Please select a variable.\")   )    iv_r <- reactive({     iv <- InputValidator$new()     iv$add_validator(adsl_reactive_input()$iv)     iv$enable()     iv   })    output$out1 <- renderPrint({     if (iv_r()$is_valid()) {       cat(format_data_extract(adsl_reactive_input()))     } else {       \"Please fix errors in your selection\"     }   }) }  if (interactive()) {   shinyApp(ui, server) }  # App: simplified data extraction ui <- fluidPage(   standard_layout(     output = verbatimTextOutput(\"out1\"),     encoding = tagList(       data_extract_ui(         id = \"adsl_var\",         label = \"ADSL selection\",         data_extract_spec = adsl_extract       )     )   ) )  server <- function(input, output, session) {   adsl_reactive_input <- data_extract_srv(     id = \"adsl_var\",     datasets = data_list,     data_extract_spec = adsl_extract   )    output$out1 <- renderPrint(adsl_reactive_input()) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal data extraction module user-interface ‚Äî data_extract_ui","text":"","code":"data_extract_ui(id, label, data_extract_spec, is_single_dataset = FALSE)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal data extraction module user-interface ‚Äî data_extract_ui","text":"id (character) shiny input unique identifier. label (character) Label data extract input. data_extract_spec (list data_extract_spec) outcome listing data_extract_spec() constructor calls. is_single_dataset (logical) FALSE display dataset widget.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal data extraction module user-interface ‚Äî data_extract_ui","text":"Shiny shiny::selectInputs allow define extract data specific dataset. input elements returned inside shiny::div container.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"teal data extraction module user-interface ‚Äî data_extract_ui","text":"three inputs rendered Dataset select Optional. one data_extract_spec handed function, shiny shiny::selectInput rendered. Else just name dataset given. Filter Panel Optional. data_extract_spec contains filter element shiny shiny::selectInput rendered options filter dataset. Select panel shiny shiny::selectInput select columns dataset go analysis. output can analyzed using data_extract_srv(...). functionality used encoding panel teal app. allow app-developers specify data_extract_spec() object. object used teal module variables filtered data CDISC datasets. can use function way shiny module UI. corresponding server module can found data_extract_srv().","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/data_extract_ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal data extraction module user-interface ‚Äî data_extract_ui","text":"","code":"library(shiny) library(teal.widgets)  adtte_filters <- filter_spec(   vars = c(\"PARAMCD\", \"CNSR\"),   sep = \"-\",   choices = c(\"OS-1\" = \"OS-1\", \"OS-0\" = \"OS-0\", \"PFS-1\" = \"PFS-1\"),   selected = \"OS-1\",   multiple = FALSE,   label = \"Choose endpoint and Censor\" )  response_spec <- data_extract_spec(   dataname = \"ADTTE\",   filter = adtte_filters,   select = select_spec(     choices = c(\"AVAL\", \"BMRKR1\", \"AGE\"),     selected = c(\"AVAL\", \"BMRKR1\"),     multiple = TRUE,     fixed = FALSE,     label = \"Column\"   ) ) # Call to use inside your teal module UI function standard_layout(   output = tableOutput(\"table\"),   encoding = tags$div(     data_extract_ui(       id = \"regressor\",       label = \"Regressor Variable\",       data_extract_spec = response_spec     )   ) ) #> <div class=\"row\"> #>   <div class=\"col-md-3\"> #>     <div class=\"well\"> #>       <div> #>         <style type=\"text/css\">/* teal.transform data_extract css */ #>  #> .data-extract { #>   border-left: 3px solid #e3e3e3; #>   padding-left: 0.6em; #>   border-radius: 5px; #>   margin-left: -0.6em; #>   margin-bottom: 1em; #> } #>  #> .data-extract label.control-label { #>   font-weight: normal; #>   color: grey; #> } #>  #> .data-extract .filter_spec > div:first-child { #>   margin-bottom: 5px; #> }<\/style> #>         <div class=\"data-extract\"> #>           <label>Regressor Variable<\/label> #>           <span class=\"help-block\"> #>             Dataset: #>             <code>ADTTE<\/code> #>           <\/span> #>           <div> #>             <div> #>               <div class=\"filter_spec\"> #>                 <div class=\"shinyjs-hide\"> #>                   <script> #>         $(function() { #>           $('#regressor-dataset_ADTTE_singleextract-filter1-col').on('change', function(e) { #>             var select_concat = $(this).val().length ? $(this).val().join(', ') : 'NULL'; #>             $('#regressor-dataset_ADTTE_singleextract-filter1-col_selected_text').html(select_concat); #>           }) #>         })<\/script> #>                   <div> #>                     <div id=\"regressor-dataset_ADTTE_singleextract-filter1-col_input\" style=\"display: none;\"> #>                       <div class=\"form-group shiny-input-container\"> #>                         <label class=\"control-label shiny-label-null\" for=\"regressor-dataset_ADTTE_singleextract-filter1-col\" id=\"regressor-dataset_ADTTE_singleextract-filter1-col-label\"><\/label> #>                         <select data-actions-box=\"true\" data-none-selected-text=\"- Nothing selected -\" data-max-options=\"Inf\" data-show-subtext=\"true\" data-live-search=\"false\" data-state-input=\"true\" id=\"regressor-dataset_ADTTE_singleextract-filter1-col\" class=\"selectpicker form-control\" autocomplete=\"off\" multiple=\"multiple\"><option value=\"PARAMCD\" selected>PARAMCD<\/option> #> <option value=\"CNSR\" selected>CNSR<\/option><\/select> #>                       <\/div> #>                     <\/div> #>                     <div id=\"regressor-dataset_ADTTE_singleextract-filter1-col_fixed\" style=\"display: block;\"> #>                       <label class=\"control-label\"><\/label> #>                       <code id=\"regressor-dataset_ADTTE_singleextract-filter1-col_selected_text\">PARAMCD, CNSR<\/code> #>                     <\/div> #>                   <\/div> #>                 <\/div> #>                 <div> #>                   <script> #>         $(function() { #>           $('#regressor-dataset_ADTTE_singleextract-filter1-vals').on('change', function(e) { #>             var select_concat = $(this).val().length ? $(this).val().join(', ') : 'NULL'; #>             $('#regressor-dataset_ADTTE_singleextract-filter1-vals_selected_text').html(select_concat); #>           }) #>         })<\/script> #>                   <div> #>                     <div id=\"regressor-dataset_ADTTE_singleextract-filter1-vals_input\" style=\"display: block;\"> #>                       <div class=\"form-group shiny-input-container\"> #>                         <label class=\"control-label\" id=\"regressor-dataset_ADTTE_singleextract-filter1-vals-label\" for=\"regressor-dataset_ADTTE_singleextract-filter1-vals\">Choose endpoint and Censor<\/label> #>                         <select data-actions-box=\"false\" data-none-selected-text=\"- Nothing selected -\" data-max-options=\"1\" data-show-subtext=\"true\" data-live-search=\"false\" data-state-input=\"true\" id=\"regressor-dataset_ADTTE_singleextract-filter1-vals\" class=\"selectpicker form-control\" autocomplete=\"off\" multiple=\"multiple\"><option value=\"OS-1\" selected>OS-1<\/option> #> <option value=\"OS-0\">OS-0<\/option> #> <option value=\"PFS-1\">PFS-1<\/option><\/select> #>                       <\/div> #>                     <\/div> #>                     <div id=\"regressor-dataset_ADTTE_singleextract-filter1-vals_fixed\" style=\"display: none;\"> #>                       <label class=\"control-label\">Choose endpoint and Censor<\/label> #>                       <code id=\"regressor-dataset_ADTTE_singleextract-filter1-vals_selected_text\">OS-1<\/code> #>                     <\/div> #>                   <\/div> #>                 <\/div> #>               <\/div> #>             <\/div> #>             <div> #>               <script> #>         $(function() { #>           $('#regressor-dataset_ADTTE_singleextract-select').on('change', function(e) { #>             var select_concat = $(this).val().length ? $(this).val().join(', ') : 'NULL'; #>             $('#regressor-dataset_ADTTE_singleextract-select_selected_text').html(select_concat); #>           }) #>         })<\/script> #>               <div> #>                 <div id=\"regressor-dataset_ADTTE_singleextract-select_input\" style=\"display: block;\"> #>                   <div class=\"form-group shiny-input-container\"> #>                     <label class=\"control-label\" id=\"regressor-dataset_ADTTE_singleextract-select-label\" for=\"regressor-dataset_ADTTE_singleextract-select\">Column<\/label> #>                     <select data-actions-box=\"true\" data-none-selected-text=\"- Nothing selected -\" data-max-options=\"Inf\" data-show-subtext=\"true\" data-live-search=\"false\" data-state-input=\"true\" id=\"regressor-dataset_ADTTE_singleextract-select\" class=\"selectpicker form-control\" autocomplete=\"off\" multiple=\"multiple\"><option value=\"AVAL\" selected>AVAL<\/option> #> <option value=\"BMRKR1\" selected>BMRKR1<\/option> #> <option value=\"AGE\">AGE<\/option><\/select> #>                   <\/div> #>                 <\/div> #>                 <div id=\"regressor-dataset_ADTTE_singleextract-select_fixed\" style=\"display: none;\"> #>                   <label class=\"control-label\">Column<\/label> #>                   <code id=\"regressor-dataset_ADTTE_singleextract-select_selected_text\">AVAL, BMRKR1<\/code> #>                 <\/div> #>               <\/div> #>             <\/div> #>             <div class=\"form-group shiny-input-container shinyjs-disabled shinyjs-hide\"> #>               <div class=\"checkbox\"> #>                 <label> #>                   <input id=\"regressor-dataset_ADTTE_singleextract-reshape\" type=\"checkbox\" class=\"shiny-input-checkbox\"/> #>                   <span>Reshape long to wide format<\/span> #>                 <\/label> #>               <\/div> #>             <\/div> #>           <\/div> #>         <\/div> #>       <\/div> #>     <\/div> #>   <\/div> #>   <div class=\"col-md-9\"> #>     <div class=\"well\"> #>       <div class=\"pre-output\"><\/div> #>       <div class=\"output\"> #>         <div id=\"table\" class=\"shiny-html-output\"><\/div> #>       <\/div> #>       <div class=\"post-output\"><\/div> #>     <\/div> #>   <\/div> #> <\/div>"},{"path":"https://insightsengineering.github.io/teal.transform/reference/datanames_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Help text with available datasets input ‚Äî datanames_input","title":"Help text with available datasets input ‚Äî datanames_input","text":"Creates shiny::helpText() names available datasets current module.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/datanames_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Help text with available datasets input ‚Äî datanames_input","text":"","code":"datanames_input(data_extracts)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/datanames_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Help text with available datasets input ‚Äî datanames_input","text":"data_extracts (list) data extracts single variable.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/datanames_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Help text with available datasets input ‚Äî datanames_input","text":"shiny.tag defining help-text element can added UI element.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/delayed_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Bare constructor for delayed_choices object ‚Äî delayed_choices","title":"Bare constructor for delayed_choices object ‚Äî delayed_choices","text":"Special S3 structures delay selection possible choices filter_spec, select_spec choices_selected object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/delayed_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bare constructor for delayed_choices object ‚Äî delayed_choices","text":"","code":"all_choices()  first_choice()  last_choice()  first_choices(n)  last_choices(n)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/delayed_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bare constructor for delayed_choices object ‚Äî delayed_choices","text":"n positive (integer-like) number first/last items subset ","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/delayed_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bare constructor for delayed_choices object ‚Äî delayed_choices","text":"Object class delayed_data, delayed_choices, function returns appropriate subset argument. all_choices, first_choices, last_choices structures also additional class internal use.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/delayed_choices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bare constructor for delayed_choices object ‚Äî delayed_choices","text":"","code":"# These pairs of structures represent semantically identical specifications: choices_selected(choices = letters, selected = letters) #> $choices #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $selected #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\" choices_selected(choices = letters, selected = all_choices()) #> $choices #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $selected #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"  choices_selected(choices = letters, selected = letters[1]) #> $choices #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $selected #> [1] \"a\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\" choices_selected(choices = letters, selected = first_choice()) #> $choices #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $selected #> [1] \"a\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"  choices_selected(choices = letters, selected = letters[length(letters)]) #> $choices #>  [1] \"z\" \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" #> [20] \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" #>  #> $selected #> [1] \"z\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\" choices_selected(choices = letters, selected = last_choice()) #> $choices #>  [1] \"z\" \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" #> [20] \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" #>  #> $selected #> [1] \"z\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"  choices_selected(choices = letters, selected = head(letters, 4)) #> $choices #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $selected #> [1] \"a\" \"b\" \"c\" \"d\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\" choices_selected(choices = letters, selected = first_choices(4)) #> $choices #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $selected #> [1] \"a\" \"b\" \"c\" \"d\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"  choices_selected(choices = letters, selected = tail(letters, 4)) #> $choices #>  [1] \"w\" \"x\" \"y\" \"z\" \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" #> [20] \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" #>  #> $selected #> [1] \"w\" \"x\" \"y\" \"z\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\" choices_selected(choices = letters, selected = last_choices(4)) #> $choices #>  [1] \"w\" \"x\" \"y\" \"z\" \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" #> [20] \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" #>  #> $selected #> [1] \"w\" \"x\" \"y\" \"z\" #>  #> $fixed #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"choices_selected\"  filter_spec(   vars = c(\"selected_variable\"),   choices = c(\"value1\", \"value2\", \"value3\"),   selected = \"value3\" ) #> filter_spec with delayed data: #> $ vars_choices #> [1] \"selected_variable\" #> $ vars_selected #> [1] \"selected_variable\" #> $ vars_label #> NULL #> $ vars_fixed #> [1] TRUE #> $ vars_multiple #> [1] TRUE #> $ choices #> [1] \"value1\" \"value2\" \"value3\" #> $ selected #> [1] \"value3\" #> $ label #> [1] \"Filter by\" #> $ multiple #> [1] FALSE #> $ fixed #> [1] FALSE #> $ sep #> [1] \" - \" #> $ drop_keys #> [1] FALSE #> $ dataname #> NULL #> $ initialized #> [1] FALSE filter_spec(   vars = c(\"selected_variable\"),   choices = c(\"value1\", \"value2\", \"value3\"),   selected = last_choice() ) #> filter_spec with delayed data: #> $ vars_choices #> [1] \"selected_variable\" #> $ vars_selected #> [1] \"selected_variable\" #> $ vars_label #> NULL #> $ vars_fixed #> [1] TRUE #> $ vars_multiple #> [1] TRUE #> $ choices #> [1] \"value1\" \"value2\" \"value3\" #> $ selected #> [1] \"value3\" #> $ label #> [1] \"Filter by\" #> $ multiple #> [1] FALSE #> $ fixed #> [1] FALSE #> $ sep #> [1] \" - \" #> $ drop_keys #> [1] FALSE #> $ dataname #> NULL #> $ initialized #> [1] FALSE"},{"path":"https://insightsengineering.github.io/teal.transform/reference/extract_choices_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract labels from choices basing on attributes and names ‚Äî extract_choices_labels","title":"Extract labels from choices basing on attributes and names ‚Äî extract_choices_labels","text":"Extract labels choices basing attributes names","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/extract_choices_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract labels from choices basing on attributes and names ‚Äî extract_choices_labels","text":"","code":"extract_choices_labels(choices, values = NULL)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/extract_choices_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract labels from choices basing on attributes and names ‚Äî extract_choices_labels","text":"choices (list vector) select choices. values (list vector) optional, subset choices labels extracted, NULL choices.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/extract_choices_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract labels from choices basing on attributes and names ‚Äî extract_choices_labels","text":"character vector labels.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/filter_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Data extract filter specification ‚Äî filter_spec","title":"Data extract filter specification ‚Äî filter_spec","text":"consists choices additionally variable names choices.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/filter_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data extract filter specification ‚Äî filter_spec","text":"","code":"filter_spec(   vars,   choices = NULL,   selected = if (inherits(choices, \"delayed_data\")) NULL else choices[1],   multiple = length(selected) > 1 || inherits(selected, \"multiple_choices\"),   label = \"Filter by\",   sep = attr(choices, \"sep\"),   drop_keys = FALSE )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/filter_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data extract filter specification ‚Äî filter_spec","text":"vars (character delayed_data) object. Character vector giving columns filtered. key variables data set filtered. delayed_data objects can created via variable_choices(), value_choices(), choices_selected(). choices (character numeric logical (delayed_data) object. Named character vector define choices shiny shiny::selectInput(). choices used filter dataset. shall filter values vars input separated separator(sep). Please watch filter values follow order vars input. following example show filter two columns: vars = c(\"PARAMCD\",\"AVISIT\") choices = c(\"CRP - BASELINE\", \"ALT - BASELINE\") lead filtering (PARAMCD == \"CRP\" & AVISIT == \"BASELINE\") | (PARAMCD == \"ALT\" & AVISIT == \"BASELINE\"). sep input \" - \" case. delayed_data objects can created via variable_choices() value_choices(). selected (character numeric logical (delayed_data delayed_choices) object. Named character vector define selected values shiny shiny::selectInput() (default values). value displayed inside shiny app upon start. delayed_choices objects resolve selection choices become available. multiple (logical) Whether multiple values shall allowed shiny shiny::selectInput(). label (character) optional, defines label top specific shiny shiny::selectInput(). default value \"Filter \". sep (character) separator string split choices selected inputs values different columns. drop_keys (logical) optional, whether drop filter column dataset keys, TRUE default.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/filter_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data extract filter specification ‚Äî filter_spec","text":"filter_spec-S3-class object delayed_filter_spec-S3-class object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/filter_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data extract filter specification ‚Äî filter_spec","text":"filter_spec used inside teal apps allow filtering datasets key variables. Imagine adverse events table. columns PARAMCD CNSR. PARAMCD contains levels \"OS\", \"PFS\", \"EFS\". CNSR contains levels \"0\" \"1\". first example show filter_spec setup influence drop-menu app user see.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/filter_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data extract filter specification ‚Äî filter_spec","text":"","code":"# for Adverse Events table filter_spec(   vars = c(\"PARAMCD\", \"CNSR\"),   sep = \"-\",   choices = c(\"OS-1\" = \"OS-1\", \"OS-0\" = \"OS-0\", \"PFS-1\" = \"PFS-1\"),   selected = \"OS-1\",   multiple = FALSE,   label = \"Choose endpoint and Censor\" ) #> filter_spec with delayed data: #> $ vars_choices #> [1] \"PARAMCD\" \"CNSR\"    #> $ vars_selected #> [1] \"PARAMCD\" \"CNSR\"    #> $ vars_label #> NULL #> $ vars_fixed #> [1] TRUE #> $ vars_multiple #> [1] TRUE #> $ choices #>    OS-1    OS-0   PFS-1  #>  \"OS-1\"  \"OS-0\" \"PFS-1\"  #> $ selected #> [1] \"OS-1\" #> $ label #> [1] \"Choose endpoint and Censor\" #> $ multiple #> [1] FALSE #> $ fixed #> [1] FALSE #> $ sep #> [1] \"-\" #> $ drop_keys #> [1] FALSE #> $ dataname #> NULL #> $ initialized #> [1] FALSE  # filtering a single variable filter_spec(   vars = c(\"PARAMCD\"),   sep = \"-\",   choices = c(\"OS\", \"PFS\", \"EFS\"),   selected = \"OS\",   multiple = FALSE,   label = \"Choose endpoint\" ) #> filter_spec with delayed data: #> $ vars_choices #> [1] \"PARAMCD\" #> $ vars_selected #> [1] \"PARAMCD\" #> $ vars_label #> NULL #> $ vars_fixed #> [1] TRUE #> $ vars_multiple #> [1] TRUE #> $ choices #> [1] \"OS\"  \"PFS\" \"EFS\" #> $ selected #> [1] \"OS\" #> $ label #> [1] \"Choose endpoint\" #> $ multiple #> [1] FALSE #> $ fixed #> [1] FALSE #> $ sep #> [1] \"-\" #> $ drop_keys #> [1] FALSE #> $ dataname #> NULL #> $ initialized #> [1] FALSE  # filtering a single variable by multiple levels of the variable filter_spec(   vars = c(\"PARAMCD\"),   sep = \"-\",   choices = c(\"OS\", \"PFS\", \"EFS\"),   selected = c(\"OS\", \"PFS\"),   multiple = TRUE,   label = \"Choose endpoint\" ) #> filter_spec with delayed data: #> $ vars_choices #> [1] \"PARAMCD\" #> $ vars_selected #> [1] \"PARAMCD\" #> $ vars_label #> NULL #> $ vars_fixed #> [1] TRUE #> $ vars_multiple #> [1] TRUE #> $ choices #> [1] \"OS\"  \"PFS\" \"EFS\" #> $ selected #> [1] \"OS\"  \"PFS\" #> $ label #> [1] \"Choose endpoint\" #> $ multiple #> [1] TRUE #> $ fixed #> [1] FALSE #> $ sep #> [1] \"-\" #> $ drop_keys #> [1] FALSE #> $ dataname #> NULL #> $ initialized #> [1] FALSE  # delayed version filter_spec(   vars = variable_choices(\"ADSL\", \"SEX\"),   sep = \"-\",   choices = value_choices(\"ADSL\", \"SEX\", \"SEX\"),   selected = \"F\",   multiple = FALSE,   label = \"Choose endpoint and Censor\" ) #> filter_spec with delayed data: #> $ vars_choices #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   [1] \"SEX\" #>   $ key #>   NULL #> $ vars_selected #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   [1] \"SEX\" #>   $ key #>   NULL #> $ vars_label #> NULL #> $ vars_fixed #> [1] TRUE #> $ vars_multiple #> [1] TRUE #> $ choices #>   value_choices with delayed data:  ADSL #>   $ data #>   [1] \"ADSL\" #>   $ var_choices #>   [1] \"SEX\" #>   $ var_label #>   [1] \"SEX\" #>   $ subset #>   NULL #>   $ sep #>   [1] \" - \" #> $ selected #> [1] \"F\" #> $ label #> [1] \"Choose endpoint and Censor\" #> $ multiple #> [1] FALSE #> $ fixed #> [1] FALSE #> $ sep #> [1] \"-\" #> $ drop_keys #> [1] FALSE #> $ dataname #> NULL #> $ initialized #> [1] FALSE # using `choices_selected()` filter_spec(   vars = choices_selected(variable_choices(\"ADSL\", subset = c(\"SEX\", \"AGE\")), \"SEX\", fixed = FALSE),   multiple = TRUE ) #> filter_spec with delayed data: #> $ vars_choices #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   [1] \"SEX\" \"AGE\" #>   $ key #>   NULL #> $ vars_selected #> [1] \"SEX\" #> $ vars_label #> [1] \"Filter by\" #> $ vars_fixed #> [1] FALSE #> $ vars_multiple #> [1] FALSE #> $ choices #> NULL #> $ selected #> NULL #> $ label #> NULL #> $ multiple #> [1] TRUE #> $ fixed #> [1] FALSE #> $ sep #> [1] \" - \" #> $ drop_keys #> [1] FALSE #> $ dataname #> NULL #> $ initialized #> [1] FALSE  filter_spec(   vars = choices_selected(variable_choices(\"ADSL\"), \"SEX\", fixed = TRUE),   multiple = TRUE ) #> filter_spec with delayed data: #> $ vars_choices #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   NULL #>   $ key #>   NULL #> $ vars_selected #> [1] \"SEX\" #> $ vars_label #> NULL #> $ vars_fixed #> [1] TRUE #> $ vars_multiple #> [1] FALSE #> $ choices #> NULL #> $ selected #> NULL #> $ label #> [1] \"Filter by\" #> $ multiple #> [1] TRUE #> $ fixed #> [1] FALSE #> $ sep #> [1] \" - \" #> $ drop_keys #> [1] FALSE #> $ dataname #> NULL #> $ initialized #> [1] FALSE  # choose all choices adsl_filter <- filter_spec(   vars = choices_selected(variable_choices(\"ADSL\"), \"SEX\", fixed = FALSE),   choices = value_choices(\"ADSL\", \"SEX\"),   selected = all_choices() )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/filter_spec_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Data extract dynamic filter specification ‚Äî filter_spec_internal","title":"Data extract dynamic filter specification ‚Äî filter_spec_internal","text":"Builds configuration data_extract_ui module. function covers configuration filtering datasets (called filter_spec), used build UI element teal app.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/filter_spec_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data extract dynamic filter specification ‚Äî filter_spec_internal","text":"","code":"filter_spec_internal(   vars_choices,   vars_selected = NULL,   vars_label = NULL,   vars_fixed = FALSE,   vars_multiple = TRUE,   choices = NULL,   selected = NULL,   label = NULL,   fixed = FALSE,   multiple = TRUE,   sep = attr(vars_choices, \"sep\"),   drop_keys = FALSE,   dataname = NULL,   initialized = FALSE )  # S3 method for class 'delayed_data' filter_spec_internal(   vars_choices,   vars_selected = NULL,   vars_label = NULL,   vars_fixed = FALSE,   vars_multiple = TRUE,   choices = NULL,   selected = NULL,   label = NULL,   fixed = FALSE,   multiple = TRUE,   sep = attr(vars_choices, \"sep\"),   drop_keys = FALSE,   dataname = NULL,   initialized = FALSE )  # Default S3 method filter_spec_internal(   vars_choices,   vars_selected = NULL,   vars_label = NULL,   vars_fixed = FALSE,   vars_multiple = TRUE,   choices = NULL,   selected = NULL,   label = NULL,   fixed = FALSE,   multiple = TRUE,   sep = attr(vars_choices, \"sep\"),   drop_keys = FALSE,   dataname = NULL,   initialized = FALSE )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/filter_spec_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data extract dynamic filter specification ‚Äî filter_spec_internal","text":"vars_choices (character delayed_data) vector dataset column names available build dynamic filter delayed_data objects can created via variable_choices(). vars_selected (NULL named character) selected column name choices. vars_label (character) title printed UI element generated basis filter_spec. vars_fixed (logical) true allow change selected variables UI element; otherwise, allow. vars_multiple (logical) true allow select multiple variables UI elements; otherwise, allow. choices (character numeric logical (delayed_data) object. Named character vector define choices shiny shiny::selectInput(). choices used filter dataset. shall filter values vars input separated separator(sep). Please watch filter values follow order vars input. following example show filter two columns: vars = c(\"PARAMCD\",\"AVISIT\") choices = c(\"CRP - BASELINE\", \"ALT - BASELINE\") lead filtering (PARAMCD == \"CRP\" & AVISIT == \"BASELINE\") | (PARAMCD == \"ALT\" & AVISIT == \"BASELINE\"). sep input \" - \" case. delayed_data objects can created via variable_choices() value_choices(). selected (character numeric logical (delayed_data delayed_choices) object. Named character vector define selected values shiny shiny::selectInput() (default values). value displayed inside shiny app upon start. delayed_choices objects resolve selection choices become available. label (character) optional, defines label top specific shiny shiny::selectInput(). default value \"Filter \". fixed (logical) true allow change initially selected values variables; otherwise, allow. multiple (logical) Whether multiple values shall allowed shiny shiny::selectInput(). sep (character) separator string split choices selected inputs values different columns. drop_keys (logical) optional, whether drop filter column dataset keys, TRUE default. dataname (character) name dataset filter covers. Set initialization teal application. initialized (logical) indicates whether filter already initialized application. TRUE filter already consumed server function; FALSE otherwise.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/filter_spec_internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data extract dynamic filter specification ‚Äî filter_spec_internal","text":"filter_spec delayed_filter_spec S3-class object.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/format_data_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatting data extracts ‚Äî format_data_extract","title":"Formatting data extracts ‚Äî format_data_extract","text":"Returns human-readable string representation extracted data_extract_spec object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/format_data_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatting data extracts ‚Äî format_data_extract","text":"","code":"format_data_extract(data_extract)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/format_data_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatting data extracts ‚Äî format_data_extract","text":"data_extract list list output data_extract_srv.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/format_data_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatting data extracts ‚Äî format_data_extract","text":"character(1) representation data_extract object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/format_data_extract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Formatting data extracts ‚Äî format_data_extract","text":"function formats output data_extract_srv. See example information.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/format_data_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formatting data extracts ‚Äî format_data_extract","text":"","code":"library(shiny)  simple_des <- data_extract_spec(   dataname = \"iris\",   filter = filter_spec(vars = \"Petal.Length\", choices = c(\"1.4\", \"1.5\")),   select = select_spec(choices = c(\"Petal.Length\", \"Species\")) )  ui <- fluidPage(   data_extract_ui(     id = \"extract\",     label = \"data extract ui\",     data_extract_spec = simple_des,     is_single_dataset = TRUE   ),   verbatimTextOutput(\"formatted_extract\") ) server <- function(input, output, session) {   extracted_input <- data_extract_srv(     id = \"extract\",     datasets = list(iris = iris),     data_extract_spec = simple_des   )   output$formatted_extract <- renderPrint({     cat(format_data_extract(extracted_input()))   }) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_anl_relabel_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the relabel call ‚Äî get_anl_relabel_call","text":"","code":"get_anl_relabel_call(columns_source, datasets, anl_name = \"ANL\")"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_anl_relabel_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the relabel call ‚Äî get_anl_relabel_call","text":"columns_source (named list) names column names, values labels + additional attribute dataname datasets (named list reactive non-reactive data.frame) object containing data list data.frame. passing list non-reactive data.frame objects, converted reactive data.frame objects internally. anl_name (character(1)) Name analysis dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_anl_relabel_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the relabel call ‚Äî get_anl_relabel_call","text":"(call) relabel dataset assign anl_name.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dataset_prefixed_col_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns non-key column names from data ‚Äî get_dataset_prefixed_col_names","text":"","code":"get_dataset_prefixed_col_names(data)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dataset_prefixed_col_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns non-key column names from data ‚Äî get_dataset_prefixed_col_names","text":"data (data.frame) Data attribute filter_and_columns. can created data_extract_srv(), returns shiny shiny::reactive().","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dataset_prefixed_col_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns non-key column names from data ‚Äî get_dataset_prefixed_col_names","text":"named character vector non-key columns data.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dataset_prefixed_col_names.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Returns non-key column names from data ‚Äî get_dataset_prefixed_col_names","text":"data_extract_srv()","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dplyr_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Parses filter, select, rename and reshape call ‚Äî get_dplyr_call","title":"Parses filter, select, rename and reshape call ‚Äî get_dplyr_call","text":"Parses filter, select, rename reshape call","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dplyr_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parses filter, select, rename and reshape call ‚Äî get_dplyr_call","text":"","code":"get_dplyr_call(   selector_list,   idx = 1L,   join_keys = teal.data::join_keys(),   dplyr_call_data = get_dplyr_call_data(selector_list, join_keys = join_keys),   datasets = NULL )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dplyr_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parses filter, select, rename and reshape call ‚Äî get_dplyr_call","text":"selector_list (reactive) output data_extract_multiple_srv() reactive named list outputs data_extract_srv(). using reactive named list, names must identical shiny ids respective data_extract_ui(). idx (integer) optional, current selector index selectors list. join_keys (join_keys) nested list keys used joining. dplyr_call_data (list) simplified selectors aggregated set filters, selections, reshapes etc. necessary data merging. data (NULL named list) datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dplyr_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parses filter, select, rename and reshape call ‚Äî get_dplyr_call","text":"(call) filter, select, rename reshape call.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dplyr_call_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregates data extract selectors ‚Äî get_dplyr_call_data","title":"Aggregates data extract selectors ‚Äî get_dplyr_call_data","text":"Simplifies selector_list aggregated list one element per selector - dataset, filter configuration reshape status.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dplyr_call_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregates data extract selectors ‚Äî get_dplyr_call_data","text":"","code":"get_dplyr_call_data(selector_list, join_keys = teal.data::join_keys())"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dplyr_call_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregates data extract selectors ‚Äî get_dplyr_call_data","text":"selector_list (reactive) output data_extract_multiple_srv() reactive named list outputs data_extract_srv(). using reactive named list, names must identical shiny ids respective data_extract_ui(). join_keys (join_keys) nested list keys used joining.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dplyr_call_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregates data extract selectors ‚Äî get_dplyr_call_data","text":"(list) simplified selectors aggregated set filters, selections, reshapes etc. necessary data merging.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dropped_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of filtered-out filters dropped from selection ‚Äî get_dropped_filters","title":"Names of filtered-out filters dropped from selection ‚Äî get_dropped_filters","text":"Names filtered-filters dropped selection","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dropped_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of filtered-out filters dropped from selection ‚Äî get_dropped_filters","text":"","code":"get_dropped_filters(selector)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dropped_filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names of filtered-out filters dropped from selection ‚Äî get_dropped_filters","text":"selector one element selector_list obtained get_dplyr_call_data.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dropped_filters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names of filtered-out filters dropped from selection ‚Äî get_dropped_filters","text":"Vector character names filters dropped select call.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_dropped_filters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Names of filtered-out filters dropped from selection ‚Äî get_dropped_filters","text":"Names filtered-filters dropped automatic selection (key vars automatically included select). Dropped filter filter became unique observations. means variable filtered just one level, key anymore. variables used filter also dropped automatic selection, unless selected.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_extract_datanames.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets names of the datasets from a list of data_extract_spec objects ‚Äî get_extract_datanames","title":"Gets names of the datasets from a list of data_extract_spec objects ‚Äî get_extract_datanames","text":"Fetches dataname slot per data_extract_spec list data_extract_spec.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_extract_datanames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets names of the datasets from a list of data_extract_spec objects ‚Äî get_extract_datanames","text":"","code":"get_extract_datanames(data_extracts)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_extract_datanames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets names of the datasets from a list of data_extract_spec objects ‚Äî get_extract_datanames","text":"data_extracts (data_extract_spec(1)) object list (lists) data_extract_spec.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_extract_datanames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets names of the datasets from a list of data_extract_spec objects ‚Äî get_extract_datanames","text":"character vector unique dataname set.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_filter_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a dplyr filter call ‚Äî get_filter_call","title":"Build a dplyr filter call ‚Äî get_filter_call","text":"Build dplyr filter call","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_filter_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a dplyr filter call ‚Äî get_filter_call","text":"","code":"get_filter_call(filter, dataname = NULL, datasets = NULL)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_filter_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a dplyr filter call ‚Äî get_filter_call","text":"filter (list) Either list lists list select selected items. dataname (NULL character) name dataset. datasets (NULL named list).","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_filter_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a dplyr filter call ‚Äî get_filter_call","text":"dplyr filter call.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_initial_filter_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the initial values for the vals widget of a filter_spec object ‚Äî get_initial_filter_values","title":"Returns the initial values for the vals widget of a filter_spec object ‚Äî get_initial_filter_values","text":"Returns initial values vals widget filter_spec object","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_initial_filter_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the initial values for the vals widget of a filter_spec object ‚Äî get_initial_filter_values","text":"","code":"get_initial_filter_values(filter, datasets)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_initial_filter_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the initial values for the vals widget of a filter_spec object ‚Äî get_initial_filter_values","text":"filter (filter_spec) filter generated call filter_spec(). datasets (named list) list reactive data.frame type objects.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_initial_filter_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the initial values for the vals widget of a filter_spec object ‚Äî get_initial_filter_values","text":"named list two slots choices selected.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Get merge call from a list of selectors ‚Äî get_merge_call","title":"Get merge call from a list of selectors ‚Äî get_merge_call","text":"Creates list calls depending selector(s) type merge. merge order selectors passed function.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get merge call from a list of selectors ‚Äî get_merge_call","text":"","code":"get_merge_call(   selector_list,   join_keys = teal.data::join_keys(),   dplyr_call_data = get_dplyr_call_data(selector_list, join_keys = join_keys),   merge_function = \"dplyr::full_join\",   anl_name = \"ANL\" )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get merge call from a list of selectors ‚Äî get_merge_call","text":"selector_list (reactive) output data_extract_multiple_srv() reactive named list outputs data_extract_srv(). using reactive named list, names must identical shiny ids respective data_extract_ui(). join_keys (join_keys) nested list keys used joining. dplyr_call_data (list) simplified selectors aggregated set filters. merge_function (character(1) reactive) character string function accepts arguments x, y perform merging datasets. anl_name (character(1)) Name analysis dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get merge call from a list of selectors ‚Äî get_merge_call","text":"List merge call elements.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets merge key pair list from keys list ‚Äî get_merge_key_grid","title":"Gets merge key pair list from keys list ‚Äî get_merge_key_grid","text":"Gets merge key pair list keys list","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets merge key pair list from keys list ‚Äî get_merge_key_grid","text":"","code":"get_merge_key_grid(selector_list, join_keys = teal.data::join_keys())"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets merge key pair list from keys list ‚Äî get_merge_key_grid","text":"selector_list (reactive) output data_extract_multiple_srv() reactive named list outputs data_extract_srv(). using reactive named list, names must identical shiny ids respective data_extract_ui(). join_keys (join_keys) nested list keys used joining.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets merge key pair list from keys list ‚Äî get_merge_key_grid","text":"List merge key pairs datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_i.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets keys needed for join call of two selectors ‚Äî get_merge_key_i","title":"Gets keys needed for join call of two selectors ‚Äî get_merge_key_i","text":"Gets keys needed join call two selectors","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets keys needed for join call of two selectors ‚Äî get_merge_key_i","text":"","code":"get_merge_key_i(   selector_list,   idx,   dplyr_call_data = get_dplyr_call_data(selector_list) )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets keys needed for join call of two selectors ‚Äî get_merge_key_i","text":"selector_list (reactive) output data_extract_multiple_srv() reactive named list outputs data_extract_srv(). using reactive named list, names must identical shiny ids respective data_extract_ui(). idx (integer) optional, current selector index selectors list. dplyr_call_data (list) simplified selectors aggregated set filters.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_i.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets keys needed for join call of two selectors ‚Äî get_merge_key_i","text":"character list keys.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets keys vector from keys list ‚Äî get_merge_key_pair","title":"Gets keys vector from keys list ‚Äî get_merge_key_pair","text":"Gets keys vector keys list","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets keys vector from keys list ‚Äî get_merge_key_pair","text":"","code":"get_merge_key_pair(selector_from, selector_to, key_from)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets keys vector from keys list ‚Äî get_merge_key_pair","text":"selector_from (list) data_extract_srv objects. selector_to (list) data_extract_srv objects. key_from (character) keys used first selector joining.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets keys vector from keys list ‚Äî get_merge_key_pair","text":"character vector selector keys.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_merge_key_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets keys vector from keys list ‚Äî get_merge_key_pair","text":"function covers now 4 cases: Dataset without parent: Primary keys returned; Dataset source = dataset target: primary keys subtracted key columns get purely filtered. means just one value left filtering inside column can taken ; Target dataname parent foreign keys; case foreign keys;","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_pivot_longer_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pivot longer columns ‚Äî get_pivot_longer_col","title":"Get pivot longer columns ‚Äî get_pivot_longer_col","text":"Get values names spread columns.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_pivot_longer_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pivot longer columns ‚Äî get_pivot_longer_col","text":"","code":"get_pivot_longer_col(selector)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_pivot_longer_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pivot longer columns ‚Äî get_pivot_longer_col","text":"selector one element selector_list obtained get_dplyr_call_data.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_pivot_longer_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get pivot longer columns ‚Äî get_pivot_longer_col","text":"character vector selected columns keys element.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_relabel_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Create relabel call from named character ‚Äî get_relabel_call","title":"Create relabel call from named character ‚Äî get_relabel_call","text":"Function creates relabel call named character.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_relabel_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create relabel call from named character ‚Äî get_relabel_call","text":"","code":"get_relabel_call(labels)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_relabel_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create relabel call from named character ‚Äî get_relabel_call","text":"labels (named character) name name function argument name value function argument value.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_relabel_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create relabel call from named character ‚Äî get_relabel_call","text":"call object relabel step.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_relabel_call.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create relabel call from named character ‚Äî get_relabel_call","text":"","code":"get_relabel_call(   labels = c(     x = as.name(\"ANL\"),     AGE = \"Age\",     AVAL = \"Continuous variable\"   ) ) #> teal.data::col_relabel(x = ANL, AGE = \"Age\", AVAL = \"Continuous variable\")  get_relabel_call(   labels = c(     AGE = \"Age\",     AVAL = \"Continuous variable\"   ) ) #> teal.data::col_relabel(AGE = \"Age\", AVAL = \"Continuous variable\")"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_relabel_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Get columns to relabel ‚Äî get_relabel_cols","title":"Get columns to relabel ‚Äî get_relabel_cols","text":"Get columns relabel excluding reshaped (pivot_wider).","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_relabel_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get columns to relabel ‚Äî get_relabel_cols","text":"","code":"get_relabel_cols(columns_source, dplyr_call_data)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_relabel_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get columns to relabel ‚Äî get_relabel_cols","text":"columns_source (list) dplyr_call_data (list)","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_relabel_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get columns to relabel ‚Äî get_relabel_cols","text":"columns_source list without columns reshaped.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_rename_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns dplyr rename call ‚Äî get_rename_call","title":"Returns dplyr rename call ‚Äî get_rename_call","text":"Rename used duplicated columns.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_rename_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns dplyr rename call ‚Äî get_rename_call","text":"","code":"get_rename_call(   selector_list = list(),   idx = 1L,   join_keys = teal.data::join_keys(),   dplyr_call_data = get_dplyr_call_data(selector_list, join_keys = join_keys) )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_rename_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns dplyr rename call ‚Äî get_rename_call","text":"selector_list (reactive) output data_extract_multiple_srv() reactive named list outputs data_extract_srv(). using reactive named list, names must identical shiny ids respective data_extract_ui(). idx (integer) optional, current selector index selectors list. join_keys (join_keys) nested list keys used joining. dplyr_call_data (list) simplified selectors aggregated set filters, selections, reshapes etc. necessary data merging.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_rename_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns dplyr rename call ‚Äî get_rename_call","text":"(call) dplyr rename call.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_reshape_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns dplyr reshape call ‚Äî get_reshape_call","title":"Returns dplyr reshape call ‚Äî get_reshape_call","text":"Returns dplyr reshape call","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_reshape_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns dplyr reshape call ‚Äî get_reshape_call","text":"","code":"get_reshape_call(   selector_list = list(),   idx = 1L,   join_keys = teal.data::join_keys(),   dplyr_call_data = get_dplyr_call_data(selector_list, join_keys = join_keys) )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_reshape_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns dplyr reshape call ‚Äî get_reshape_call","text":"selector_list (reactive) output data_extract_multiple_srv() reactive named list outputs data_extract_srv(). using reactive named list, names must identical shiny ids respective data_extract_ui(). idx (integer) optional, current selector index selectors list. join_keys (join_keys) nested list keys used joining. dplyr_call_data (list) simplified selectors aggregated set filters, selections, reshapes etc. necessary data merging.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_reshape_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns dplyr reshape call ‚Äî get_reshape_call","text":"List multiple dplyr calls reshape data.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_reshape_unite_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unite columns ‚Äî get_reshape_unite_col","title":"Get unite columns ‚Äî get_reshape_unite_col","text":"Get key names spreads values columns. Reshape done keys filter_spec.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_reshape_unite_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unite columns ‚Äî get_reshape_unite_col","text":"","code":"get_reshape_unite_col(selector)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_reshape_unite_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unite columns ‚Äî get_reshape_unite_col","text":"selector one element selector_list obtained get_dplyr_call_data.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_reshape_unite_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unite columns ‚Äî get_reshape_unite_col","text":"character vector selector's keys defined filters.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_reshape_unite_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unite columns values ‚Äî get_reshape_unite_vals","title":"Get unite columns values ‚Äî get_reshape_unite_vals","text":"Get key values (levels) unite columns.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_reshape_unite_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unite columns values ‚Äî get_reshape_unite_vals","text":"","code":"get_reshape_unite_vals(selector)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_reshape_unite_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unite columns values ‚Äî get_reshape_unite_vals","text":"selector one element selector_list obtained get_dplyr_call_data.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_reshape_unite_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unite columns values ‚Äî get_reshape_unite_vals","text":"character vector keys unite columns.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_select_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse dplyr select call ‚Äî get_select_call","title":"Parse dplyr select call ‚Äî get_select_call","text":"Parse dplyr select call","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_select_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse dplyr select call ‚Äî get_select_call","text":"","code":"get_select_call(select)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_select_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse dplyr select call ‚Äî get_select_call","text":"select (character) vector selected column names.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/get_select_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse dplyr select call ‚Äî get_select_call","text":"dplyr select call.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/id_for_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate id for dataset ‚Äî id_for_dataset","title":"Generate id for dataset ‚Äî id_for_dataset","text":"Generate id dataset","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/id_for_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate id for dataset ‚Äî id_for_dataset","text":"","code":"id_for_dataset(dataname)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/id_for_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate id for dataset ‚Äî id_for_dataset","text":"dataname (character(1)) name dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/id_for_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate id for dataset ‚Äî id_for_dataset","text":"character(1).","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/include_css_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"system.file used access files packages, work devtools. result, method individually redefined required package. Therefore, function exported.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/include_css_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"","code":"include_css_files(pattern = \"*\")"},{"path":"https://insightsengineering.github.io/teal.transform/reference/include_css_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"pattern (character) pattern files included.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/include_css_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"HTML code includes CSS files.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/is_single_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify uniform dataset source across data extract specification ‚Äî is_single_dataset","title":"Verify uniform dataset source across data extract specification ‚Äî is_single_dataset","text":"Checks input data_extract_spec objects come dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/is_single_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify uniform dataset source across data extract specification ‚Äî is_single_dataset","text":"","code":"is_single_dataset(...)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/is_single_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify uniform dataset source across data extract specification ‚Äî is_single_dataset","text":"... either data_extract_spec objects lists data_extract_spec objects contain NULL","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/is_single_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify uniform dataset source across data extract specification ‚Äî is_single_dataset","text":"TRUE data_extract_spec objects come dataset, FALSE otherwise.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/list_extract_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make sure that the extract specification is in list format ‚Äî list_extract_spec","text":"","code":"list_extract_spec(x, allow_null = FALSE)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/list_extract_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make sure that the extract specification is in list format ‚Äî list_extract_spec","text":"x (data_extract_spec list) data_extract_spec elements. allow_null (logical) whether x can NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/list_extract_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make sure that the extract specification is in list format ‚Äî list_extract_spec","text":"x list already.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge the datasets on the keys ‚Äî merge_datasets","title":"Merge the datasets on the keys ‚Äî merge_datasets","text":"Combines/merges multiple datasets specified keys attribute.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge the datasets on the keys ‚Äî merge_datasets","text":"","code":"merge_datasets(   selector_list,   datasets,   join_keys,   merge_function = \"dplyr::full_join\",   anl_name = \"ANL\" )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge the datasets on the keys ‚Äî merge_datasets","text":"selector_list (reactive) output data_extract_multiple_srv() reactive named list outputs data_extract_srv(). using reactive named list, names must identical shiny ids respective data_extract_ui(). datasets (named list reactive non-reactive data.frame) object containing data list data.frame. passing list non-reactive data.frame objects, converted reactive data.frame objects internally. join_keys (join_keys) variables used join keys datasets datasets. used extract keys every dataset. merge_function (character(1) reactive) character string function accepts arguments x, y perform merging datasets. anl_name (character(1)) Name analysis dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge the datasets on the keys ‚Äî merge_datasets","text":"merged_dataset list containing: expr (list call) code needed replicate merged dataset; columns_source (list) column names selected particular selector; list element contains named character vector : Values names columns ANL. case column name selected one selector gets prefixed id selector. example two data_extract id x, y, duplicated selected variable (example AGE) prefixed x.AGE y.AGE; Names vector denote names variables input dataset; attr(,\"dataname\") indicate dataset variable merged ; attr(, \"always selected\") denote names variables need always selected; keys (list) keys merged dataset; filter_info (list) information given user. information defines filters applied data. Additionally defines variables selected data sets.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_datasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge the datasets on the keys ‚Äî merge_datasets","text":"Internally function uses calls allow reproducibility. function often used inside teal module server function selectors output data_extract_srv data_extract_multiple_srv.","code":"# inside teal module server function  response <- data_extract_srv(   id = \"reponse\",   data_extract_spec = response_spec,   datasets = datasets ) regressor <- data_extract_srv(   id = \"regressor\",   data_extract_spec = regressor_spec,   datasets = datasets ) merged_data <- merge_datasets(list(regressor(), response()))"},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge the datasets on the keys ‚Äî merge_datasets","text":"","code":"library(shiny) library(teal.data)  X <- data.frame(A = c(1, 1:3), B = 2:5, D = 1:4, E = letters[1:4], G = letters[6:9]) Y <- data.frame(A = c(1, 1, 2), B = 2:4, C = c(4, 4:5), E = letters[4:6], G = letters[1:3]) join_keys <- join_keys(join_key(\"X\", \"Y\", c(\"A\", \"B\")))  selector_list <- list(   list(     dataname = \"X\",     filters = NULL,     select = \"E\",     keys = c(\"A\", \"B\"),     reshape = FALSE,     internal_id = \"x\"   ),   list(     dataname = \"Y\",     filters = NULL,     select = \"G\",     keys = c(\"A\", \"C\"),     reshape = FALSE,     internal_id = \"y\"   ) )  data_list <- list(X = reactive(X), Y = reactive(Y))  merged_datasets <- isolate(   merge_datasets(     selector_list = selector_list,     datasets = data_list,     join_keys = join_keys   ) )  paste(merged_datasets$expr) #> [1] \"ANL_1 <- X %>% dplyr::select(A, B, E)\"                     #> [2] \"ANL_2 <- Y %>% dplyr::select(A, B, G)\"                     #> [3] \"ANL <- ANL_1\"                                              #> [4] \"ANL <- dplyr::full_join(ANL, ANL_2, by = c(\\\"A\\\", \\\"B\\\"))\""},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_expression_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge expression module ‚Äî merge_expression_module","title":"Merge expression module ‚Äî merge_expression_module","text":"Convenient wrapper combine data_extract_multiple_srv() merge_expression_srv() additional processing required. Compare example found merge_expression_srv().","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_expression_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge expression module ‚Äî merge_expression_module","text":"","code":"merge_expression_module(   datasets,   join_keys = NULL,   data_extract,   merge_function = \"dplyr::full_join\",   anl_name = \"ANL\",   id = \"merge_id\" )  # S3 method for class 'reactive' merge_expression_module(   datasets,   join_keys = NULL,   data_extract,   merge_function = \"dplyr::full_join\",   anl_name = \"ANL\",   id = \"merge_id\" )  # S3 method for class 'list' merge_expression_module(   datasets,   join_keys = NULL,   data_extract,   merge_function = \"dplyr::full_join\",   anl_name = \"ANL\",   id = \"merge_id\" )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_expression_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge expression module ‚Äî merge_expression_module","text":"datasets (named list reactive non-reactive data.frame) object containing data list data.frame. passing list non-reactive data.frame objects, converted reactive data.frame objects internally. join_keys (join_keys) variables used join keys datasets datasets. used extract keys every dataset. data_extract (named list data_extract_spec). merge_function (character(1)) character string function accepts arguments x, y perform merging datasets. anl_name (character(1)) Name analysis dataset. id ID string corresponds ID used call module's UI function.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_expression_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge expression module ‚Äî merge_expression_module","text":"Reactive expression output merge_expression_srv().","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_expression_module.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge expression module ‚Äî merge_expression_module","text":"","code":"library(shiny) library(teal.data) library(teal.widgets)  ADSL <- data.frame(   STUDYID = \"A\",   USUBJID = LETTERS[1:10],   SEX = rep(c(\"F\", \"M\"), 5),   AGE = rpois(10, 30),   BMRKR1 = rlnorm(10) ) ADLB <- expand.grid(   STUDYID = \"A\",   USUBJID = LETTERS[1:10],   PARAMCD = c(\"ALT\", \"CRP\", \"IGA\"),   AVISIT = c(\"SCREENING\", \"BASELINE\", \"WEEK 1 DAY 8\", \"WEEK 2 DAY 15\") ) ADLB$AVAL <- rlnorm(120) ADLB$CHG <- rnorm(120)  data_list <- list(   ADSL = reactive(ADSL),   ADLB = reactive(ADLB) )  join_keys <- join_keys(   join_key(\"ADSL\", \"ADSL\", c(\"STUDYID\", \"USUBJID\")),   join_key(\"ADSL\", \"ADLB\", c(\"STUDYID\", \"USUBJID\")),   join_key(\"ADLB\", \"ADLB\", c(\"STUDYID\", \"USUBJID\", \"PARAMCD\", \"AVISIT\")) )  adsl_extract <- data_extract_spec(   dataname = \"ADSL\",   select = select_spec(     label = \"Select variable:\",     choices = c(\"AGE\", \"BMRKR1\"),     selected = \"AGE\",     multiple = TRUE,     fixed = FALSE   ) ) adlb_extract <- data_extract_spec(   dataname = \"ADLB\",   filter = filter_spec(vars = \"PARAMCD\", choices = c(\"ALT\", \"CRP\", \"IGA\"), selected = \"ALT\"),   select = select_spec(     label = \"Select variable:\",     choices = c(\"AVAL\", \"CHG\"),     selected = \"AVAL\",     multiple = TRUE,     fixed = FALSE   ) )  ui <- fluidPage(   standard_layout(     output = tags$div(       verbatimTextOutput(\"expr\"),       dataTableOutput(\"data\")     ),     encoding = tagList(       data_extract_ui(\"adsl_var\", label = \"ADSL selection\", adsl_extract),       data_extract_ui(\"adlb_var\", label = \"ADLB selection\", adlb_extract)     )   ) ) #> `shiny::dataTableOutput()` is deprecated as of shiny 1.8.1. #> Please use `DT::DTOutput()` instead. #> Since you have a suitable version of DT (>= v0.32.1), shiny::dataTableOutput() will automatically use DT::DTOutput() under-the-hood. #> If this happens to break your app, set `options(shiny.legacy.datatable = TRUE)` to get the legacy datatable implementation (or `FALSE` to squelch this message). #> See <https://rstudio.github.io/DT/shiny.html> for more information.  server <- function(input, output, session) {   data_q <- qenv()    data_q <- eval_code(     data_q,     \"ADSL <- data.frame(         STUDYID = 'A',         USUBJID = LETTERS[1:10],         SEX = rep(c('F', 'M'), 5),         AGE = rpois(10, 30),         BMRKR1 = rlnorm(10)       )\"   )    data_q <- eval_code(     data_q,     \"ADLB <- expand.grid(         STUDYID = 'A',         USUBJID = LETTERS[1:10],         PARAMCD = c('ALT', 'CRP', 'IGA'),         AVISIT = c('SCREENING', 'BASELINE', 'WEEK 1 DAY 8', 'WEEK 2 DAY 15'),         AVAL = rlnorm(120),         CHG = rlnorm(120)        )\"   )    merged_data <- merge_expression_module(     data_extract = list(adsl_var = adsl_extract, adlb_var = adlb_extract),     datasets = data_list,     join_keys = join_keys,     merge_function = \"dplyr::left_join\"   )    code_merge <- reactive({     for (exp in merged_data()$expr) data_q <- eval_code(data_q, exp)     data_q   })    output$expr <- renderText(paste(merged_data()$expr, collapse = \"\\n\"))   output$data <- renderDataTable(code_merge()[[\"ANL\"]]) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_expression_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data merge module server ‚Äî merge_expression_srv","text":"","code":"merge_expression_srv(   id = \"merge_id\",   selector_list,   datasets,   join_keys,   merge_function = \"dplyr::full_join\",   anl_name = \"ANL\" )  # S3 method for class 'reactive' merge_expression_srv(   id = \"merge_id\",   selector_list,   datasets,   join_keys,   merge_function = \"dplyr::full_join\",   anl_name = \"ANL\" )  # S3 method for class 'list' merge_expression_srv(   id = \"merge_id\",   selector_list,   datasets,   join_keys,   merge_function = \"dplyr::full_join\",   anl_name = \"ANL\" )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_expression_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data merge module server ‚Äî merge_expression_srv","text":"id ID string corresponds ID used call module's UI function. selector_list (reactive) output data_extract_multiple_srv() reactive named list outputs data_extract_srv(). using reactive named list, names must identical shiny ids respective data_extract_ui(). datasets (named list reactive non-reactive data.frame) object containing data list data.frame. passing list non-reactive data.frame objects, converted reactive data.frame objects internally. join_keys (join_keys) variables used join keys datasets datasets. used extract keys every dataset. merge_function (character(1) reactive) character string function accepts arguments x, y perform merging datasets. anl_name (character(1)) Name analysis dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_expression_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data merge module server ‚Äî merge_expression_srv","text":"Reactive expression output merge_expression_srv().","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_expression_srv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data merge module server ‚Äî merge_expression_srv","text":"additional processing data_extract list input required, merge_expression_srv() can combined data_extract_multiple_srv() data_extract_srv() influence selector_list input. Compare example found merge_expression_module().","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_expression_srv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data merge module server ‚Äî merge_expression_srv","text":"","code":"library(shiny) library(teal.data) library(teal.widgets)  ADSL <- data.frame(   STUDYID = \"A\",   USUBJID = LETTERS[1:10],   SEX = rep(c(\"F\", \"M\"), 5),   AGE = rpois(10, 30),   BMRKR1 = rlnorm(10) )  ADLB <- expand.grid(   STUDYID = \"A\",   USUBJID = LETTERS[1:10],   PARAMCD = c(\"ALT\", \"CRP\", \"IGA\"),   AVISIT = c(\"SCREENING\", \"BASELINE\", \"WEEK 1 DAY 8\", \"WEEK 2 DAY 15\") ) ADLB$AVAL <- rlnorm(120) ADLB$CHG <- rlnorm(120)  data_list <- list(   ADSL = reactive(ADSL),   ADLB = reactive(ADLB) )  join_keys <- join_keys(   join_key(\"ADSL\", \"ADSL\", c(\"STUDYID\", \"USUBJID\")),   join_key(\"ADSL\", \"ADLB\", c(\"STUDYID\", \"USUBJID\")),   join_key(\"ADLB\", \"ADLB\", c(\"STUDYID\", \"USUBJID\", \"PARAMCD\", \"AVISIT\")) )  adsl_extract <- data_extract_spec(   dataname = \"ADSL\",   select = select_spec(     label = \"Select variable:\",     choices = c(\"AGE\", \"BMRKR1\"),     selected = \"AGE\",     multiple = TRUE,     fixed = FALSE   ) ) adlb_extract <- data_extract_spec(   dataname = \"ADLB\",   filter = filter_spec(vars = \"PARAMCD\", choices = c(\"ALT\", \"CRP\", \"IGA\"), selected = \"ALT\"),   select = select_spec(     label = \"Select variable:\",     choices = c(\"AVAL\", \"CHG\"),     selected = \"AVAL\",     multiple = TRUE,     fixed = FALSE   ) )  ui <- fluidPage(   standard_layout(     output = tags$div(       verbatimTextOutput(\"expr\"),       dataTableOutput(\"data\")     ),     encoding = tagList(       data_extract_ui(\"adsl_var\", label = \"ADSL selection\", adsl_extract),       data_extract_ui(\"adlb_var\", label = \"ADLB selection\", adlb_extract)     )   ) ) #> `shiny::dataTableOutput()` is deprecated as of shiny 1.8.1. #> Please use `DT::DTOutput()` instead. #> Since you have a suitable version of DT (>= v0.32.1), shiny::dataTableOutput() will automatically use DT::DTOutput() under-the-hood. #> If this happens to break your app, set `options(shiny.legacy.datatable = TRUE)` to get the legacy datatable implementation (or `FALSE` to squelch this message). #> See <https://rstudio.github.io/DT/shiny.html> for more information.  server <- function(input, output, session) {   data_q <- qenv()    data_q <- eval_code(     data_q,     \"ADSL <- data.frame(         STUDYID = 'A',         USUBJID = LETTERS[1:10],         SEX = rep(c('F', 'M'), 5),         AGE = rpois(10, 30),         BMRKR1 = rlnorm(10)       )\"   )    data_q <- eval_code(     data_q,     \"ADLB <- expand.grid(         STUDYID = 'A',         USUBJID = LETTERS[1:10],         PARAMCD = c('ALT', 'CRP', 'IGA'),         AVISIT = c('SCREENING', 'BASELINE', 'WEEK 1 DAY 8', 'WEEK 2 DAY 15'),         AVAL = rlnorm(120),         CHG = rlnorm(120)       )\"   )    selector_list <- data_extract_multiple_srv(     list(adsl_var = adsl_extract, adlb_var = adlb_extract),     datasets = data_list   )   merged_data <- merge_expression_srv(     selector_list = selector_list,     datasets = data_list,     join_keys = join_keys,     merge_function = \"dplyr::left_join\"   )    code_merge <- reactive({     for (exp in merged_data()$expr) data_q <- eval_code(data_q, exp)     data_q   })    output$expr <- renderText(paste(merged_data()$expr, collapse = \"\\n\"))   output$data <- renderDataTable(code_merge()[[\"ANL\"]]) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_selectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge selectors when dataname, reshape, filters and keys entries are identical ‚Äî merge_selectors","title":"Merge selectors when dataname, reshape, filters and keys entries are identical ‚Äî merge_selectors","text":"Merge selectors dataname, reshape, filters keys entries identical","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_selectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge selectors when dataname, reshape, filters and keys entries are identical ‚Äî merge_selectors","text":"","code":"merge_selectors(selector_list)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_selectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge selectors when dataname, reshape, filters and keys entries are identical ‚Äî merge_selectors","text":"selector_list (reactive) output data_extract_multiple_srv() reactive named list outputs data_extract_srv(). using reactive named list, names must identical shiny ids respective data_extract_ui().","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/merge_selectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge selectors when dataname, reshape, filters and keys entries are identical ‚Äî merge_selectors","text":"List merged selectors original parameter conditions merge applicable.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/no_selected_as_NULL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check select choices for no choice made ‚Äî no_selected_as_NULL","text":"","code":"no_selected_as_NULL(x)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/no_selected_as_NULL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check select choices for no choice made ‚Äî no_selected_as_NULL","text":"x (character) Word shall checked NULL, empty, \"‚Äì-selection\".","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/no_selected_as_NULL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check select choices for no choice made ‚Äî no_selected_as_NULL","text":"word NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/parse_merge_key_i.html","id":null,"dir":"Reference","previous_headings":"","what":"Parses merge keys ‚Äî parse_merge_key_i","title":"Parses merge keys ‚Äî parse_merge_key_i","text":"Parses merge keys","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/parse_merge_key_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parses merge keys ‚Äî parse_merge_key_i","text":"","code":"parse_merge_key_i(   selector_list,   idx,   dplyr_call_data = get_dplyr_call_data(selector_list),   merge_key = get_merge_key_i(selector_list, idx, dplyr_call_data) )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/parse_merge_key_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parses merge keys ‚Äî parse_merge_key_i","text":"selector_list (reactive) output data_extract_multiple_srv() reactive named list outputs data_extract_srv(). using reactive named list, names must identical shiny ids respective data_extract_ui(). idx (integer) optional, current selector index selectors list. dplyr_call_data (list) simplified selectors aggregated set filters. merge_key keys obtained get_merge_key_i.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/parse_merge_key_i.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parses merge keys ‚Äî parse_merge_key_i","text":"call merge keys.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages ‚Äî reexports","title":"Objects exported from other packages ‚Äî reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve delayed inputs by evaluating the code within the provided datasets ‚Äî resolve","text":"","code":"resolve(x, datasets, keys = NULL)  # S3 method for class 'delayed_variable_choices' resolve(x, datasets, keys)  # S3 method for class 'delayed_value_choices' resolve(x, datasets, keys)  # S3 method for class 'delayed_choices_selected' resolve(x, datasets, keys)  # S3 method for class 'delayed_select_spec' resolve(x, datasets, keys)  # S3 method for class 'delayed_filter_spec' resolve(x, datasets, keys)  # S3 method for class 'delayed_data_extract_spec' resolve(x, datasets, keys)  # S3 method for class 'list' resolve(x, datasets, keys)  # Default S3 method resolve(x, datasets, keys)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve delayed inputs by evaluating the code within the provided datasets ‚Äî resolve","text":"x (delayed_data) object resolve. datasets (named list data.frame) use evaluation. keys (named list character) used keys dataset. names list must exactly datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve delayed inputs by evaluating the code within the provided datasets ‚Äî resolve","text":"Resolved object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Resolve delayed inputs by evaluating the code within the provided datasets ‚Äî resolve","text":"resolve(delayed_variable_choices): Call variable_choices() delayed variable_choices object. resolve(delayed_value_choices): Call value_choices() delayed value_choices object. resolve(delayed_choices_selected): Call select_spec() delayed choices_selected object. resolve(delayed_select_spec): Call select_spec() delayed specification. resolve(delayed_filter_spec): Call filter_spec() delayed specification. resolve(delayed_data_extract_spec): Call data_extract_spec() delayed specification. resolve(list): Iterates elements list recursively calls resolve. resolve(default): Default method nothing returns x .","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Resolve delayed inputs by evaluating the code within the provided datasets ‚Äî resolve","text":"internal function used resolve_delayed(). methods used internally .","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve_delayed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve delayed inputs by evaluating the code within the provided datasets ‚Äî resolve_delayed","text":"","code":"resolve_delayed(x, datasets, keys)  # S3 method for class 'FilteredData' resolve_delayed(   x,   datasets,   keys = sapply(datasets$datanames(), datasets$get_keys, simplify = FALSE) )  # S3 method for class 'list' resolve_delayed(x, datasets, keys = NULL)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve_delayed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve delayed inputs by evaluating the code within the provided datasets ‚Äî resolve_delayed","text":"x (delayed_data, list) resolve. datasets (FilteredData named list) use reference resolve x. keys (named list) primary keys dataset datasets. names(keys) match names(datasets).","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve_delayed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve delayed inputs by evaluating the code within the provided datasets ‚Äî resolve_delayed","text":"Resolved object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve_delayed.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Resolve delayed inputs by evaluating the code within the provided datasets ‚Äî resolve_delayed","text":"resolve_delayed(FilteredData): Default values keys parameters extracted datasets. resolve_delayed(list): Generic method datasets argument named list.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve_delayed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolve delayed inputs by evaluating the code within the provided datasets ‚Äî resolve_delayed","text":"","code":"library(shiny)  ADSL <- teal.data::rADSL isolate({   data_list <- list(ADSL = reactive(ADSL))    # value_choices example   v1 <- value_choices(\"ADSL\", \"SEX\", \"SEX\")   v1   resolve_delayed(v1, data_list)    # variable_choices example   v2 <- variable_choices(\"ADSL\", c(\"BMRKR1\", \"BMRKR2\"))   v2   resolve_delayed(v2, data_list)    # data_extract_spec example   adsl_filter <- filter_spec(     vars = variable_choices(\"ADSL\", \"SEX\"),     sep = \"-\",     choices = value_choices(\"ADSL\", \"SEX\", \"SEX\"),     selected = \"F\",     multiple = FALSE,     label = \"Choose endpoint and Censor\"   )    adsl_select <- select_spec(     label = \"Select variable:\",     choices = variable_choices(\"ADSL\", c(\"BMRKR1\", \"BMRKR2\")),     selected = \"BMRKR1\",     multiple = FALSE,     fixed = FALSE   )    adsl_de <- data_extract_spec(     dataname = \"ADSL\",     select = adsl_select,     filter = adsl_filter   )    resolve_delayed(adsl_filter, datasets = data_list)   resolve_delayed(adsl_select, datasets = data_list)   resolve_delayed(adsl_de, datasets = data_list)    # nested list (arm_ref_comp)   arm_ref_comp <- list(     ARMCD = list(       ref = variable_choices(\"ADSL\"),       comp = variable_choices(\"ADSL\")     )   )    resolve_delayed(arm_ref_comp, datasets = data_list) }) #> $ARMCD #> $ARMCD$ref #> number of choices: 55  #>  #> STUDYID: Study Identifier #> USUBJID: Unique Subject Identifier #> SUBJID: Subject Identifier for the Study #> SITEID: Study Site Identifier #> AGE: Age #> AGEU: Age Units #> SEX: Sex #> RACE: Race #> ETHNIC: Ethnicity #> COUNTRY: Country #> DTHFL: Subject Death Flag #> INVID: Investigator Identifier #> INVNAM: Investigator Name #> ARM: Description of Planned Arm #> ARMCD: Planned Arm Code #> ACTARM: Description of Actual Arm #> ACTARMCD: Actual Arm Code #> TRT01P: Planned Treatment for Period 01 #> TRT01A: Actual Treatment for Period 01 #> TRT02P: Planned Treatment for Period 02 #> TRT02A: Actual Treatment for Period 02 #> REGION1: Geographic Region 1 #> STRATA1: Stratification Factor 1 #> STRATA2: Stratification Factor 2 #> BMRKR1: Continuous Level Biomarker 1 #> BMRKR2: Categorical Level Biomarker 2 #> ITTFL: Intent-To-Treat Population Flag #> SAFFL: Safety Population Flag #> BMEASIFL: Response Evaluable Population Flag #> BEP01FL: Biomarker Evaluable Population Flag #> AEWITHFL: AE Leading to Drug Withdrawal Flag #> RANDDT: Date of Randomization #> TRTSDTM: Datetime of First Exposure to Treatment #> TRTEDTM: Datetime of Last Exposure to Treatment #> TRT01SDTM: Datetime of First Exposure to Treatment in Period 01 #> TRT01EDTM: Datetime of Last Exposure in Period 01 #> TRT02SDTM: Datetime of First Exposure to Treatment in Period 02 #> TRT02EDTM: Datetime of Last Exposure to Treatment in Period 02 #> AP01SDTM: Period 01 Start Datetime #> AP01EDTM: Period 01 End Datetime #> AP02SDTM: Period 02 Start Datetime #> AP02EDTM: Period 02 End Datetime #> EOSSTT: End of Study Status #> EOTSTT: End of Treatment Status #> EOSDT: End of Study Date #> EOSDY: End of Study Relative Day #> DCSREAS: Reason for Discontinuation from Study #> DTHDT: Date of Death #> DTHCAUS: Cause of Death #> DTHCAT: Cause of Death Category #> LDDTHELD: Elapsed Days from Last Dose to Death #> LDDTHGR1: Last Dose to Death - Days Elapsed Grp 1 #> LSTALVDT: Date Last Known Alive #> DTHADY: Relative Day of Death #> ADTHAUT: Autopsy Performed #>  #>  #> $ARMCD$comp #> number of choices: 55  #>  #> STUDYID: Study Identifier #> USUBJID: Unique Subject Identifier #> SUBJID: Subject Identifier for the Study #> SITEID: Study Site Identifier #> AGE: Age #> AGEU: Age Units #> SEX: Sex #> RACE: Race #> ETHNIC: Ethnicity #> COUNTRY: Country #> DTHFL: Subject Death Flag #> INVID: Investigator Identifier #> INVNAM: Investigator Name #> ARM: Description of Planned Arm #> ARMCD: Planned Arm Code #> ACTARM: Description of Actual Arm #> ACTARMCD: Actual Arm Code #> TRT01P: Planned Treatment for Period 01 #> TRT01A: Actual Treatment for Period 01 #> TRT02P: Planned Treatment for Period 02 #> TRT02A: Actual Treatment for Period 02 #> REGION1: Geographic Region 1 #> STRATA1: Stratification Factor 1 #> STRATA2: Stratification Factor 2 #> BMRKR1: Continuous Level Biomarker 1 #> BMRKR2: Categorical Level Biomarker 2 #> ITTFL: Intent-To-Treat Population Flag #> SAFFL: Safety Population Flag #> BMEASIFL: Response Evaluable Population Flag #> BEP01FL: Biomarker Evaluable Population Flag #> AEWITHFL: AE Leading to Drug Withdrawal Flag #> RANDDT: Date of Randomization #> TRTSDTM: Datetime of First Exposure to Treatment #> TRTEDTM: Datetime of Last Exposure to Treatment #> TRT01SDTM: Datetime of First Exposure to Treatment in Period 01 #> TRT01EDTM: Datetime of Last Exposure in Period 01 #> TRT02SDTM: Datetime of First Exposure to Treatment in Period 02 #> TRT02EDTM: Datetime of Last Exposure to Treatment in Period 02 #> AP01SDTM: Period 01 Start Datetime #> AP01EDTM: Period 01 End Datetime #> AP02SDTM: Period 02 Start Datetime #> AP02EDTM: Period 02 End Datetime #> EOSSTT: End of Study Status #> EOTSTT: End of Treatment Status #> EOSDT: End of Study Date #> EOSDY: End of Study Relative Day #> DCSREAS: Reason for Discontinuation from Study #> DTHDT: Date of Death #> DTHCAUS: Cause of Death #> DTHCAT: Cause of Death Category #> LDDTHELD: Elapsed Days from Last Dose to Death #> LDDTHGR1: Last Dose to Death - Days Elapsed Grp 1 #> LSTALVDT: Date Last Known Alive #> DTHADY: Relative Day of Death #> ADTHAUT: Autopsy Performed #>  #>  #>"},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve_delayed_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve expression after delayed data are loaded ‚Äî resolve_delayed_expr","title":"Resolve expression after delayed data are loaded ‚Äî resolve_delayed_expr","text":"Resolve expression delayed data loaded","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve_delayed_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve expression after delayed data are loaded ‚Äî resolve_delayed_expr","text":"","code":"resolve_delayed_expr(x, ds, is_value_choices)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve_delayed_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve expression after delayed data are loaded ‚Äî resolve_delayed_expr","text":"x (function) Function applied dataset. must take single argument \"data\" return character vector columns / values. ds (data.frame) Dataset. is_value_choices (logical) Determines check returned value applied.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/resolve_delayed_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve expression after delayed data are loaded ‚Äî resolve_delayed_expr","text":"character vector - result calling function x dataset ds.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/select_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Column selection input specification ‚Äî select_spec","title":"Column selection input specification ‚Äî select_spec","text":"select_spec used inside teal create shiny::selectInput() select columns dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/select_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column selection input specification ‚Äî select_spec","text":"","code":"select_spec(   choices,   selected = if (inherits(choices, \"delayed_data\")) NULL else choices[1],   multiple = length(selected) > 1 || inherits(selected, \"multiple_choices\"),   fixed = FALSE,   always_selected = NULL,   ordered = FALSE,   label = \"Select\" )  select_spec.delayed_data(   choices,   selected = NULL,   multiple = length(selected) > 1,   fixed = FALSE,   always_selected = NULL,   ordered = FALSE,   label = NULL )  select_spec.default(   choices,   selected = choices[1],   multiple = length(selected) > 1,   fixed = FALSE,   always_selected = NULL,   ordered = FALSE,   label = NULL )"},{"path":"https://insightsengineering.github.io/teal.transform/reference/select_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column selection input specification ‚Äî select_spec","text":"choices (character delayed_data) object. Named character vector define choices shiny shiny::selectInput(). columns dataset defined data_extract_spec() called. delayed_data objects can created via variable_choices() value_choices(). selected (character NULL delayed_choices delayed_data) optional named character vector define selected values shiny shiny::selectInput(). Passing delayed_choices object defers selection data available. Defaults first value choices NULL delayed data loading. multiple (logical) Whether multiple values shall allowed shiny shiny::selectInput(). fixed (logical) optional data_extract_spec() specific feature hide choices selected case needed. Setting fixed TRUE allow user select columns. lead selection columns dataset defined developer app. always_selected (character) Additional column names data set always selected ordered (logical(1)) Flags whether selection order tracked. label (character) optional, defines label top specific shiny shiny::selectInput(). default value \"Select\".","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/select_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Column selection input specification ‚Äî select_spec","text":"select_spec-S3 class object delayed_select_spec-S3-class object. contains input values. select_spec, function double checks choices selected inputs.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/select_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Column selection input specification ‚Äî select_spec","text":"","code":"# Selection with just one column allowed select_spec(   choices = c(\"AVAL\", \"BMRKR1\", \"AGE\"),   selected = c(\"AVAL\"),   multiple = FALSE,   fixed = FALSE,   label = \"Column\" ) #> $choices #>     AVAL   BMRKR1      AGE  #>   \"AVAL\" \"BMRKR1\"    \"AGE\"  #>  #> $selected #>   AVAL  #> \"AVAL\"  #>  #> $multiple #> [1] FALSE #>  #> $fixed #> [1] FALSE #>  #> $always_selected #> NULL #>  #> $ordered #> [1] FALSE #>  #> $label #> [1] \"Column\" #>  #> attr(,\"class\") #> [1] \"select_spec\"  # Selection with just multiple columns allowed select_spec(   choices = c(\"AVAL\", \"BMRKR1\", \"AGE\"),   selected = c(\"AVAL\", \"BMRKR1\"),   multiple = TRUE,   fixed = FALSE,   label = \"Columns\" ) #> $choices #>     AVAL   BMRKR1      AGE  #>   \"AVAL\" \"BMRKR1\"    \"AGE\"  #>  #> $selected #>     AVAL   BMRKR1  #>   \"AVAL\" \"BMRKR1\"  #>  #> $multiple #> [1] TRUE #>  #> $fixed #> [1] FALSE #>  #> $always_selected #> NULL #>  #> $ordered #> [1] FALSE #>  #> $label #> [1] \"Columns\" #>  #> attr(,\"class\") #> [1] \"select_spec\"  # Selection without user access select_spec(   choices = c(\"AVAL\", \"BMRKR1\"),   selected = c(\"AVAL\", \"BMRKR1\"),   multiple = TRUE,   fixed = TRUE,   label = \"Columns\" ) #> $choices #>     AVAL   BMRKR1  #>   \"AVAL\" \"BMRKR1\"  #>  #> $selected #>     AVAL   BMRKR1  #>   \"AVAL\" \"BMRKR1\"  #>  #> $multiple #> [1] TRUE #>  #> $fixed #> [1] TRUE #>  #> $always_selected #> NULL #>  #> $ordered #> [1] FALSE #>  #> $label #> [1] \"Columns\" #>  #> attr(,\"class\") #> [1] \"select_spec\"  # Delayed version select_spec(   label = \"Select variable:\",   choices = variable_choices(\"ADSL\", c(\"BMRKR1\", \"BMRKR2\")),   selected = \"BMRKR1\",   multiple = FALSE,   fixed = FALSE ) #> select_spec with delayed data: ADSL #> $ choices #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   [1] \"BMRKR1\" \"BMRKR2\" #>   $ key #>   NULL #> $ selected #> [1] \"BMRKR1\" #> $ multiple #> [1] FALSE #> $ fixed #> [1] FALSE #> $ always_selected #> NULL #> $ ordered #> [1] FALSE #> $ label #> [1] \"Select variable:\"  # delayed_choices passed to selected select_spec(   label = \"Select variable:\",   choices = variable_choices(\"ADSL\", c(\"BMRKR1\", \"BMRKR2\")),   selected = all_choices() ) #> select_spec with delayed data: ADSL #> $ choices #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   [1] \"BMRKR1\" \"BMRKR2\" #>   $ key #>   NULL #> $ selected #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   function(data) { #>           fun(original_fun(data)) #>         } #> <environment: 0x5596030d34d8> #>   $ key #>   NULL #> $ multiple #> [1] TRUE #> $ fixed #> [1] FALSE #> $ always_selected #> NULL #> $ ordered #> [1] FALSE #> $ label #> [1] \"Select variable:\"  # Both below objects are semantically the same select_spec(choices = variable_choices(\"ADSL\"), selected = variable_choices(\"ADSL\")) #> select_spec with delayed data: ADSL #> $ choices #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   NULL #>   $ key #>   NULL #> $ selected #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   NULL #>   $ key #>   NULL #> $ multiple #> [1] TRUE #> $ fixed #> [1] FALSE #> $ always_selected #> NULL #> $ ordered #> [1] FALSE #> $ label #> [1] \"Select\" select_spec(choices = variable_choices(\"ADSL\"), selected = all_choices()) #> select_spec with delayed data: ADSL #> $ choices #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   NULL #>   $ key #>   NULL #> $ selected #>   variable_choices with delayed data: ADSL #>   $ data #>   [1] \"ADSL\" #>   $ subset #>   NULL #>   $ key #>   NULL #> $ multiple #> [1] TRUE #> $ fixed #> [1] FALSE #> $ always_selected #> NULL #> $ ordered #> [1] FALSE #> $ label #> [1] \"Select\""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/split_by_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split by separator (matched exactly) ‚Äî split_by_sep","text":"","code":"split_by_sep(x, sep)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/split_by_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split by separator (matched exactly) ‚Äî split_by_sep","text":"x (character) Character vector, element split. inputs, including factor return . sep (character) separator use splitting.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/split_by_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split by separator (matched exactly) ‚Äî split_by_sep","text":"List character vectors split sep. Self x character.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/teal.transform-package.html","id":null,"dir":"Reference","previous_headings":"","what":"teal.transform: Functions for extracting and merging data in the teal framework ‚Äî teal.transform-package","title":"teal.transform: Functions for extracting and merging data in the teal framework ‚Äî teal.transform-package","text":"standardized user interface column selection, facilitates dataset merging 'teal' framework.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/reference/teal.transform-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"teal.transform: Functions for extracting and merging data in the teal framework ‚Äî teal.transform-package","text":"Maintainer: Dawid Kaledkowski dawid.kaledkowski@roche.com Authors: Pawel Rucki pawel.rucki@roche.com Mahmoud Hallal mahmoud.hallal@roche.com Nikolas Burkoff Maciej Nasinski Konrad Pagacz Junlue Zhao contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/validate_keys_sufficient.html","id":null,"dir":"Reference","previous_headings":"","what":"Validates whether the provided keys are sufficient to merge the datasets slices ‚Äî validate_keys_sufficient","title":"Validates whether the provided keys are sufficient to merge the datasets slices ‚Äî validate_keys_sufficient","text":"Validates whether provided keys sufficient merge datasets slices","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/validate_keys_sufficient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validates whether the provided keys are sufficient to merge the datasets slices ‚Äî validate_keys_sufficient","text":"","code":"validate_keys_sufficient(join_keys, merged_selector_list)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/validate_keys_sufficient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validates whether the provided keys are sufficient to merge the datasets slices ‚Äî validate_keys_sufficient","text":"join_keys (join_keys) provided join keys. merged_selector_list (list) specification datasets' slices merge.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/validate_keys_sufficient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validates whether the provided keys are sufficient to merge the datasets slices ‚Äî validate_keys_sufficient","text":"TRUE provided keys meet requirement shiny validate error otherwise.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/validate_keys_sufficient.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Validates whether the provided keys are sufficient to merge the datasets slices ‚Äî validate_keys_sufficient","text":"keys sufficient datasets slices described merged_selector_list come datasets, appropriate join keys join_keys.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/value_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Value labeling and filtering based on variable relationship ‚Äî value_choices","title":"Value labeling and filtering based on variable relationship ‚Äî value_choices","text":"Wrapper choices_labeled label variable values basing variable values.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/value_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value labeling and filtering based on variable relationship ‚Äî value_choices","text":"","code":"value_choices(data, var_choices, var_label = NULL, subset = NULL, sep = \" - \")  # S3 method for class 'character' value_choices(data, var_choices, var_label = NULL, subset = NULL, sep = \" - \")  # S3 method for class 'data.frame' value_choices(data, var_choices, var_label = NULL, subset = NULL, sep = \" - \")"},{"path":"https://insightsengineering.github.io/teal.transform/reference/value_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value labeling and filtering based on variable relationship ‚Äî value_choices","text":"data (data.frame, character) data.frame, data extract labels . character, name dataset extract data available. var_choices (character, delayed_variable_choices) Choice column names. var_label (character) vector labels column names. subset (character function) character, vector values subset. function, function used determine possible columns (e.g. factor columns). case, function must take single argument \"data\" return character vector. See examples details. sep (character) separator used case multiple column names.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/value_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Value labeling and filtering based on variable relationship ‚Äî value_choices","text":"named character vector delayed_data object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/value_choices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Value labeling and filtering based on variable relationship ‚Äî value_choices","text":"","code":"ADRS <- teal.data::rADRS value_choices(ADRS, \"PARAMCD\", \"PARAM\", subset = c(\"BESRSPI\", \"INVET\")) #> number of choices: 2  #>  #> BESRSPI: Best Confirmed Overall Response by Investigator #> INVET: Investigator End Of Induction Response #>  value_choices(ADRS, c(\"PARAMCD\", \"ARMCD\"), c(\"PARAM\", \"ARM\")) #> number of choices: 9  #>  #> BESRSPI - ARM A: Best Confirmed Overall Response by Investigator - A: Drug X #> INVET - ARM A: Investigator End Of Induction Response - A: Drug X #> OVRINV - ARM A: Overall Response by Investigator - by visit - A: Drug X #> BESRSPI - ARM C: Best Confirmed Overall Response by Investigator - C: Combination #> INVET - ARM C: Investigator End Of Induction Response - C: Combination #> OVRINV - ARM C: Overall Response by Investigator - by visit - C: Combination #> BESRSPI - ARM B: Best Confirmed Overall Response by Investigator - B: Placebo #> INVET - ARM B: Investigator End Of Induction Response - B: Placebo #> OVRINV - ARM B: Overall Response by Investigator - by visit - B: Placebo #>  value_choices(ADRS, c(\"PARAMCD\", \"ARMCD\"), c(\"PARAM\", \"ARM\"),   subset = c(\"BESRSPI - ARM A\", \"INVET - ARM A\", \"OVRINV - ARM A\") ) #> number of choices: 3  #>  #> BESRSPI - ARM A: Best Confirmed Overall Response by Investigator - A: Drug X #> INVET - ARM A: Investigator End Of Induction Response - A: Drug X #> OVRINV - ARM A: Overall Response by Investigator - by visit - A: Drug X #>  value_choices(ADRS, c(\"PARAMCD\", \"ARMCD\"), c(\"PARAM\", \"ARM\"), sep = \" --- \") #> number of choices: 9  #>  #> BESRSPI --- ARM A: Best Confirmed Overall Response by Investigator --- A: Drug X #> INVET --- ARM A: Investigator End Of Induction Response --- A: Drug X #> OVRINV --- ARM A: Overall Response by Investigator - by visit --- A: Drug X #> BESRSPI --- ARM C: Best Confirmed Overall Response by Investigator --- C: Combination #> INVET --- ARM C: Investigator End Of Induction Response --- C: Combination #> OVRINV --- ARM C: Overall Response by Investigator - by visit --- C: Combination #> BESRSPI --- ARM B: Best Confirmed Overall Response by Investigator --- B: Placebo #> INVET --- ARM B: Investigator End Of Induction Response --- B: Placebo #> OVRINV --- ARM B: Overall Response by Investigator - by visit --- B: Placebo #>   # delayed version value_choices(\"ADRS\", c(\"PARAMCD\", \"ARMCD\"), c(\"PARAM\", \"ARM\")) #> value_choices with delayed data:  ADRS #> $ data #> [1] \"ADRS\" #> $ var_choices #> [1] \"PARAMCD\" \"ARMCD\"   #> $ var_label #> [1] \"PARAM\" \"ARM\"   #> $ subset #> NULL #> $ sep #> [1] \" - \"  # functional subset value_choices(ADRS, \"PARAMCD\", \"PARAM\", subset = function(data) {   levels(data$PARAMCD)[1:2] }) #> number of choices: 2  #>  #> BESRSPI: Best Confirmed Overall Response by Investigator #> INVET: Investigator End Of Induction Response #>"},{"path":"https://insightsengineering.github.io/teal.transform/reference/variable_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable label extraction and custom selection from data ‚Äî variable_choices","title":"Variable label extraction and custom selection from data ‚Äî variable_choices","text":"Wrapper choices_labeled label variables basing existing labels data.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/variable_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable label extraction and custom selection from data ‚Äî variable_choices","text":"","code":"variable_choices(data, subset = NULL, fill = FALSE, key = NULL)  # S3 method for class 'character' variable_choices(data, subset = NULL, fill = FALSE, key = NULL)  # S3 method for class 'data.frame' variable_choices(data, subset = NULL, fill = TRUE, key = NULL)"},{"path":"https://insightsengineering.github.io/teal.transform/reference/variable_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable label extraction and custom selection from data ‚Äî variable_choices","text":"data (data.frame character) data.frame, data extract labels . character, name dataset extract data available. subset (character function) character, vector column names. function, function used determine possible columns (e.g. factor columns). case, function must take single argument \"data\" return character vector. See examples details. fill (logical(1)) TRUE, function return variable names columns non-existent labels; otherwise return NA . key (character) vector names variables, part primary key data argument. optional argument, allows identify variables associated primary key display appropriate icon teal.widgets::optionalSelectInput() widget.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/variable_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable label extraction and custom selection from data ‚Äî variable_choices","text":"Named character vector additional attributes delayed_data object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/reference/variable_choices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variable label extraction and custom selection from data ‚Äî variable_choices","text":"","code":"library(teal.data) ADRS <- rADRS variable_choices(ADRS) #> number of choices: 65  #>  #> STUDYID: Study Identifier #> USUBJID: Unique Subject Identifier #> SUBJID: Subject Identifier for the Study #> SITEID: Study Site Identifier #> AGE: Age #> AGEU: Age Units #> SEX: Sex #> RACE: Race #> ETHNIC: Ethnicity #> COUNTRY: Country #> DTHFL: Subject Death Flag #> INVID: Investigator Identifier #> INVNAM: Investigator Name #> ARM: Description of Planned Arm #> ARMCD: Planned Arm Code #> ACTARM: Description of Actual Arm #> ACTARMCD: Actual Arm Code #> TRT01P: Planned Treatment for Period 01 #> TRT01A: Actual Treatment for Period 01 #> TRT02P: Planned Treatment for Period 02 #> TRT02A: Actual Treatment for Period 02 #> REGION1: Geographic Region 1 #> STRATA1: Stratification Factor 1 #> STRATA2: Stratification Factor 2 #> BMRKR1: Continuous Level Biomarker 1 #> BMRKR2: Categorical Level Biomarker 2 #> ITTFL: Intent-To-Treat Population Flag #> SAFFL: Safety Population Flag #> BMEASIFL: Response Evaluable Population Flag #> BEP01FL: Biomarker Evaluable Population Flag #> AEWITHFL: AE Leading to Drug Withdrawal Flag #> RANDDT: Date of Randomization #> TRTSDTM: Datetime of First Exposure to Treatment #> TRTEDTM: Datetime of Last Exposure to Treatment #> TRT01SDTM: Datetime of First Exposure to Treatment in Period 01 #> TRT01EDTM: Datetime of Last Exposure in Period 01 #> TRT02SDTM: Datetime of First Exposure to Treatment in Period 02 #> TRT02EDTM: Datetime of Last Exposure to Treatment in Period 02 #> AP01SDTM: Period 01 Start Datetime #> AP01EDTM: Period 01 End Datetime #> AP02SDTM: Period 02 Start Datetime #> AP02EDTM: Period 02 End Datetime #> EOSSTT: End of Study Status #> EOTSTT: End of Treatment Status #> EOSDT: End of Study Date #> EOSDY: End of Study Relative Day #> DCSREAS: Reason for Discontinuation from Study #> DTHDT: Date of Death #> DTHCAUS: Cause of Death #> DTHCAT: Cause of Death Category #> LDDTHELD: Elapsed Days from Last Dose to Death #> LDDTHGR1: Last Dose to Death - Days Elapsed Grp 1 #> LSTALVDT: Date Last Known Alive #> DTHADY: Relative Day of Death #> ADTHAUT: Autopsy Performed #> ASEQ: Analysis Sequence Number #> RSSEQ: Sequence Number #> PARAM: Parameter #> PARAMCD: Parameter Code #> AVAL: Analysis Value #> AVALC: Analysis Value (C) #> ADTM: Analysis Datetime #> ADY: Analysis Relative Day #> AVISIT: Analysis Visit #> AVISITN: Analysis Visit (N) #>  variable_choices(ADRS, subset = c(\"PARAM\", \"PARAMCD\")) #> number of choices: 2  #>  #> PARAM: Parameter #> PARAMCD: Parameter Code #>  variable_choices(ADRS, subset = c(\"\", \"PARAM\", \"PARAMCD\")) #> number of choices: 3  #>  #> :  #> PARAM: Parameter #> PARAMCD: Parameter Code #>  variable_choices(   ADRS,   subset = c(\"\", \"PARAM\", \"PARAMCD\"),   key = default_cdisc_join_keys[\"ADRS\", \"ADRS\"] ) #> number of choices: 3  #>  #> :  #> PARAM: Parameter #> PARAMCD: Parameter Code #>   # delayed version variable_choices(\"ADRS\", subset = c(\"USUBJID\", \"STUDYID\")) #> variable_choices with delayed data: ADRS #> $ data #> [1] \"ADRS\" #> $ subset #> [1] \"USUBJID\" \"STUDYID\" #> $ key #> NULL  # functional subset (with delayed data) - return only factor variables variable_choices(\"ADRS\", subset = function(data) {   idx <- vapply(data, is.factor, logical(1))   names(data)[idx] }) #> variable_choices with delayed data: ADRS #> $ data #> [1] \"ADRS\" #> $ subset #> function (data)  #> { #>     idx <- vapply(data, is.factor, logical(1)) #>     names(data)[idx] #> } #> <environment: 0x5595fe595090> #> $ key #> NULL"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"enhancements-0-6-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.transform 0.6.0","text":"Added utility functions first_choice, last_choice, first_choices, last_choices increase repertoire specifying choices delayed data, previously served all_choices. Allowed value_choices use delayed_variable_choices objects var_choices. now possible define data_extract_spec without naming variables. Replace example data generated using scda random.cdisc.data. Change log level trace debug several functions.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"tealtransform-050","dir":"Changelog","previous_headings":"","what":"teal.transform 0.5.0","title":"teal.transform 0.5.0","text":"CRAN release: 2024-02-17","code":""},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"breaking-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal.transform 0.5.0","text":"Namespace magrittr package longer available loading teal.transform. re-exports pipe %>% operator dplyr package.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"miscellaneous-0-5-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.transform 0.5.0","text":"Removed magrittr package dependencies. Specified minimal version package dependencies.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"miscellaneous-0-4-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.transform 0.4.0","text":"Removed scda package dependency examples. Deprecated data_merge_module() data_merge_srv(). get_relabel_call function now returns call teal.data::col_relabel instead one formatters::var_relabel. Update installation instruction","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"teal.transform 0.3.0","text":"Added Queue class updated unit tests.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"enhancements-0-3-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.transform 0.3.0","text":"Updated error messages choices_labeled(), variable_choices() value_choices() informative. Updated data_extract compatible shinyvalidate: data_extract_srv data_extract_multiple_srv accept shinyvalidate validation rules return objects now include shinyvalidate::InputValidator(s). Added helper function compose_and_enable_validators simplify enabling shinyvalidate::InputValidators returned data_extract_multiple_srv.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.transform 0.3.0","text":"Fixed bug data_extract_filter_srv app developer sets selected value.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"miscellaneous-0-3-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.transform 0.3.0","text":"Examples use scda.2022 instead scda.2021","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal.transform 0.2.0","text":"Updated data merge functionality longer expect input datanames suffix _FILTERED following changes output teal.slice::FilteredData$get_call(). Updated data merge downstream functions accept joinKeys object join_keys argument.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.transform 0.2.0","text":"data_extract_ui, data_extract_srv, data_extract_multiple_srv can initialized list (optionally reactive) data.frame objects. Added new modules merge_expression_srv merge_expression_module, updates data_merge_srv data_merge_module (deprecated future releases) respectively, datasets argument takes list (optionally reactive) data.frame objects new argument join_keys accepts joinKeys object.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"enhancements-0-2-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.transform 0.2.0","text":"Updated examples tests use teal.slice::init_filtered_data initialize FilteredData object. Updated vignettes README content. Updated data_merge_module merge_expression_module accept NULL data_extract inputs.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.transform 0.1.1","text":"Added formatting function format_data_extract output data_extract_srv.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"breaking-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal.transform 0.1.1","text":"Removed (previously deprecated) input_id argument data_merge_module. Updated choices_selected selected values must valid choices. using delayed resolving invalid selected removed warning thrown logs, cases error thrown.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"miscellaneous-0-1-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.transform 0.1.1","text":"Added template pkgdown site. Added names id parameter chunks$push calls. Updated package authors. Added vignettes extracting merging data.","code":""},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"Changes (from behavior when functionality was part of teal)","what":"New features","title":"teal.transform 0.1.0","text":"Added new argument ordered select_spec() flag whether order selection tracked.","code":""},{"path":"https://insightsengineering.github.io/teal.transform/news/index.html","id":"miscellaneous-0-1-0","dir":"Changelog","previous_headings":"Changes (from behavior when functionality was part of teal)","what":"Miscellaneous","title":"teal.transform 0.1.0","text":"get_relabel_call function now returns formatters::var_relabel instead teal.data::var_relabel.","code":""}]
