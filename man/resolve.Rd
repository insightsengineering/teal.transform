% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resolve.R
\name{resolve}
\alias{resolve}
\title{Resolve delayed inputs by evaluating the code within the provided datasets}
\usage{
resolve(x, datasets, keys = NULL)
}
\arguments{
\item{x}{Object of class \code{delayed_data} to resolve.}

\item{datasets}{A named list of type \code{data.frame} to use for evaluation.}

\item{keys}{A named list of type \code{character} to be used as the keys for each dataset. The names of this
list must be exactly the same as for datasets.}
}
\value{
Resolved object.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
}
\examples{
ADSL <- teal.transform::rADSL
attr(ADSL, "keys") <- teal.data::get_cdisc_keys("ADSL")
data_list <- list(ADSL = shiny::reactive(ADSL))
keys <- list(ADSL = attr(ADSL, "keys"))
shiny::isolate({
  # value_choices example
  v1 <- value_choices("ADSL", "SEX", "SEX")
  v1
  teal.transform:::resolve(v1, data_list, keys)

  # variable_choices example
  v2 <- variable_choices("ADSL", c("BMRKR1", "BMRKR2"))
  v2
  teal.transform:::resolve(v2, data_list, keys)

  # data_extract_spec example
  adsl_filter <- filter_spec(
    vars = variable_choices("ADSL", "SEX"),
    sep = "-",
    choices = value_choices("ADSL", "SEX", "SEX"),
    selected = "F",
    multiple = FALSE,
    label = "Choose endpoint and Censor"
  )

  adsl_select <- select_spec(
    label = "Select variable:",
    choices = variable_choices("ADSL", c("BMRKR1", "BMRKR2")),
    selected = "BMRKR1",
    multiple = FALSE,
    fixed = FALSE
  )

  adsl_de <- data_extract_spec(
    dataname = "ADSL",
    select = adsl_select,
    filter = adsl_filter
  )

  teal.transform:::resolve(adsl_filter, data_list, keys)
  teal.transform:::resolve(adsl_select, data_list, keys)
  teal.transform:::resolve(adsl_de, data_list, keys)

  # nested list (arm_ref_comp)
  arm_ref_comp <- list(
    ARMCD = list(
      ref = variable_choices("ADSL"),
      comp = variable_choices("ADSL")
    )
  )

  teal.transform:::resolve(arm_ref_comp, data_list, keys)
})
}
