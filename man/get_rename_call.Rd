% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_dplyr_call.R
\name{get_rename_call}
\alias{get_rename_call}
\title{Returns \code{dplyr} rename call}
\usage{
get_rename_call(
  selector_list = list(),
  idx = 1L,
  join_keys = teal.data::join_keys(),
  dplyr_call_data = get_dplyr_call_data(selector_list, join_keys = join_keys)
)
}
\arguments{
\item{selector_list}{(\code{reactive})\cr
output from \code{\link[=data_extract_multiple_srv]{data_extract_multiple_srv()}} or a reactive named list of outputs from \code{\link[=data_extract_srv]{data_extract_srv()}}.
When using a reactive named list, the names must be identical to the shiny ids of the respective
\code{\link[=data_extract_ui]{data_extract_ui()}}.}

\item{idx}{optional (\code{integer}) current selector index in all selectors list}

\item{join_keys}{(\code{join_keys}) nested list of keys used for joining}

\item{dplyr_call_data}{(\code{list}) simplified selectors with aggregated set of filters,
selections, reshapes etc. All necessary data for merging}
}
\value{
(\code{call}) \code{dplyr} rename call
}
\description{
Rename is used only if there are duplicated columns
}
\examples{
x <- list(
  list(
    dataname = "ADSL",
    filters = NULL,
    select = utils::head(letters, 3),
    keys = teal.data::get_cdisc_keys("ADSL"),
    reshape = FALSE,
    internal_id = "test1"
  ),
  list(
    dataname = "ADSL",
    filters = NULL,
    select = letters,
    keys = teal.data::get_cdisc_keys("ADSL"),
    reshape = FALSE,
    internal_id = "test2"
  ),
  list(
    dataname = "ADSL",
    filters = NULL,
    select = utils::tail(letters, 3),
    keys = teal.data::get_cdisc_keys("ADSL"),
    reshape = FALSE,
    internal_id = "test3"
  ),
  list(
    dataname = "ADSL",
    filters = NULL,
    select = c("aa", "bb"),
    keys = teal.data::get_cdisc_keys("ADSL"),
    reshape = FALSE,
    internal_id = "test4"
  )
)
teal.transform:::get_rename_call(x, 1L)
teal.transform:::get_rename_call(x, 2L)
teal.transform:::get_rename_call(x, 3L)
teal.transform:::get_rename_call(x, 4L)
}
\references{
get_rename_dict
}
\keyword{internal}
