% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_dplyr_call.R
\name{get_dplyr_call}
\alias{get_dplyr_call}
\title{Parses filter, select, rename and reshape call}
\usage{
get_dplyr_call(
  selector_list,
  idx = 1L,
  join_keys = list(),
  dplyr_call_data = get_dplyr_call_data(selector_list, join_keys = join_keys),
  datasets = NULL
)
}
\arguments{
\item{selector_list}{(\code{reactive})\cr
output from \code{\link[=data_extract_multiple_srv]{data_extract_multiple_srv()}} or a reactive named list of outputs from \code{\link[=data_extract_srv]{data_extract_srv()}}.
When using a reactive named list, the names must be identical to the shiny ids of the respective \code{\link[=data_extract_ui]{data_extract_ui()}}.}

\item{idx}{optional (\code{integer}) current selector index in all selectors list}

\item{join_keys}{(named \code{list}) nested list of keys used for joining}

\item{dplyr_call_data}{(\code{list}) simplified selectors with aggregated set of filters,
selections, reshapes etc. All necessary data for merging}

\item{data}{(\code{NULL} or named \code{list}).}
}
\value{
(\code{call}) filter, select, rename and reshape call
}
\description{
Parse filter, select, rename and reshape call
}
\examples{
# one dataset
teal.transform:::get_dplyr_call(
  list(list(
    dataname = "ADSL",
    filters = NULL,
    select = character(0),
    keys = teal.data::get_cdisc_keys("ADSL"),
    reshape = FALSE,
    internal_id = "test1"
  ))
)
teal.transform:::get_dplyr_call(
  list(list(
    dataname = "ADSL",
    filters = list(list(columns = "SEX", selected = list("F", "M"))),
    select = character(0),
    keys = teal.data::get_cdisc_keys("ADSL"),
    reshape = FALSE,
    internal_id = "test1"
  ))
)
teal.transform:::get_dplyr_call(
  list(list(
    dataname = "ADSL",
    filters = list(list(columns = "SEX", selected = list("F", "M"))),
    select = c("AVAL"),
    keys = teal.data::get_cdisc_keys("ADSL"),
    reshape = FALSE,
    internal_id = "test1"
  ))
)

# two datasets with rename part
teal.transform:::get_dplyr_call(
  list(
    list(
      dataname = "ADSL",
      filters = NULL,
      select = c("COL_1", "COL_2"),
      keys = teal.data::get_cdisc_keys("ADSL"),
      reshape = FALSE,
      internal_id = "test1"
    ),
    list(
      dataname = "ADSL",
      filters = NULL,
      select = c("COL_2", "COL_3"),
      keys = teal.data::get_cdisc_keys("ADSL"),
      reshape = FALSE,
      internal_id = "test2"
    )
  ),
  idx = 1L
)

# long dataset with reshape part
teal.transform:::get_dplyr_call(
  list(list(
    dataname = "ADLB",
    filters = list(list(
      columns = c("PARAMCD", "AVISIT"),
      selected = list(c("ALBCV", "SCREENING"), c("ALBCV", "BASELINE"))
    )),
    select = c("AVAL"),
    keys = teal.data::get_cdisc_keys("ADLB"),
    reshape = TRUE,
    internal_id = "test1"
  ))
)
}
\keyword{internal}
